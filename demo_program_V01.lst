

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Sat Aug 09 20:41:50 2025


     1                           	processor	18m121b1
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1l,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	intentry,global,class=CODE,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	pa_nodes0,global,class=CODE,delta=2
    63                           	psect	pa_nodes0,global,class=CODE,delta=2
    64                           	dabs	1,0x5B,1,_ADCON1
    65                           	dabs	1,0x5A,1,_ADCON0
    66                           	dabs	1,0x59,1,_ADRESH
    67                           	dabs	1,0x58,1,_ADRESL
    68                           	dabs	1,0x57,1,_ANSELH
    69                           	dabs	1,0x56,1,_ANSELL
    70                           	dabs	1,0x55,1,_PWMSET
    71                           	dabs	1,0x54,1,_PWM1P
    72                           	dabs	1,0x53,1,_T2LOAD
    73                           	dabs	1,0x52,1,_T2
    74                           	dabs	1,0x51,1,_TMR2H
    75                           	dabs	1,0x50,1,_T2CON
    76                           	dabs	1,0x4F,1,_PWM0P
    77                           	dabs	1,0x4E,1,_T1LOAD
    78                           	dabs	1,0x4D,1,_T1
    79                           	dabs	1,0x4C,1,_T1CON
    80                           	dabs	1,0x4B,1,_T1CR_AUXR
    81                           	dabs	1,0x4A,1,_PMDATH
    82                           	dabs	1,0x49,1,_PMDATL
    83                           	dabs	1,0x48,1,_PMADRH
    84                           	dabs	1,0x47,1,_PMADRL
    85                           	dabs	1,0x46,1,_TRISB
    86                           	dabs	1,0x45,1,_TRISA
    87                           	dabs	1,0x43,1,_PHCON1
    88                           	dabs	1,0x42,1,_PDCON1
    89                           	dabs	1,0x41,1,_OPTION
    90                           	dabs	1,0x40,1,_PMCON
    91                           	dabs	1,0x2DE,0,_ADCS2
    92                           	dabs	1,0x5B,1
    93                           	dabs	1,0x2DD,0,_ADCS1
    94                           	dabs	1,0x5B,1
    95                           	dabs	1,0x2DC,0,_ADCS0
    96                           	dabs	1,0x5B,1
    97                           	dabs	1,0x2DB,0,_VHS2
    98                           	dabs	1,0x5B,1
    99                           	dabs	1,0x2DA,0,_VHS1
   100                           	dabs	1,0x5B,1
   101                           	dabs	1,0x2D9,0,_VHS0
   102                           	dabs	1,0x5B,1
   103                           	dabs	1,0x2D8,0,_ADREF
   104                           	dabs	1,0x5B,1
   105                           	dabs	1,0x2D5,0,_CHS3
   106                           	dabs	1,0x5A,1
   107                           	dabs	1,0x2D4,0,_CHS2
   108                           	dabs	1,0x5A,1
   109                           	dabs	1,0x2D3,0,_CHS1
   110                           	dabs	1,0x5A,1
   111                           	dabs	1,0x2D2,0,_CHS0
   112                           	dabs	1,0x5A,1
   113                           	dabs	1,0x2D1,0,_ADON
   114                           	dabs	1,0x5A,1
   115                           	dabs	1,0x2D0,0,_ADEN
   116                           	dabs	1,0x5A,1
   117                           	dabs	1,0x2BF,0,_ANSEL15
   118                           	dabs	1,0x57,1
   119                           	dabs	1,0x2BE,0,_ANSEL14
   120                           	dabs	1,0x57,1
   121                           	dabs	1,0x2BB,0,_ANSEL11
   122                           	dabs	1,0x57,1
   123                           	dabs	1,0x2BA,0,_ANSEL10
   124                           	dabs	1,0x57,1
   125                           	dabs	1,0x2B9,0,_ANSEL9
   126                           	dabs	1,0x57,1
   127                           	dabs	1,0x2B8,0,_ANSEL8
   128                           	dabs	1,0x57,1
   129                           	dabs	1,0x2B7,0,_ANSEL7
   130                           	dabs	1,0x56,1
   131                           	dabs	1,0x2B6,0,_ANSEL6
   132                           	dabs	1,0x56,1
   133                           	dabs	1,0x2B5,0,_ANSEL5
   134                           	dabs	1,0x56,1
   135                           	dabs	1,0x2B4,0,_ANSEL4
   136                           	dabs	1,0x56,1
   137                           	dabs	1,0x2B3,0,_ANSEL3
   138                           	dabs	1,0x56,1
   139                           	dabs	1,0x2B2,0,_ANSEL2
   140                           	dabs	1,0x56,1
   141                           	dabs	1,0x2B1,0,_ANSEL1
   142                           	dabs	1,0x56,1
   143                           	dabs	1,0x2B0,0,_ANSEL0
   144                           	dabs	1,0x56,1
   145                           	dabs	1,0x2A8,0,_PWMM
   146                           	dabs	1,0x55,1
   147                           	dabs	1,0x28F,0,_PWMS1
   148                           	dabs	1,0x51,1
   149                           	dabs	1,0x28E,0,_PWMS0
   150                           	dabs	1,0x51,1
   151                           	dabs	1,0x28D,0,_TIMER2_9
   152                           	dabs	1,0x51,1
   153                           	dabs	1,0x28C,0,_TIMER2_8
   154                           	dabs	1,0x51,1
   155                           	dabs	1,0x28B,0,_T2LOAD_9
   156                           	dabs	1,0x51,1
   157                           	dabs	1,0x28A,0,_T2LOAD_8
   158                           	dabs	1,0x51,1
   159                           	dabs	1,0x289,0,_PWM1_9
   160                           	dabs	1,0x51,1
   161                           	dabs	1,0x288,0,_PWM1_8
   162                           	dabs	1,0x51,1
   163                           	dabs	1,0x287,0,_T2EN
   164                           	dabs	1,0x50,1
   165                           	dabs	1,0x286,0,_PWM1E
   166                           	dabs	1,0x50,1
   167                           	dabs	1,0x285,0,_SCS
   168                           	dabs	1,0x50,1
   169                           	dabs	1,0x284,0,_T2CK1
   170                           	dabs	1,0x50,1
   171                           	dabs	1,0x283,0,_T2CK0
   172                           	dabs	1,0x50,1
   173                           	dabs	1,0x282,0,_T2PR2
   174                           	dabs	1,0x50,1
   175                           	dabs	1,0x281,0,_T2PR1
   176                           	dabs	1,0x50,1
   177                           	dabs	1,0x280,0,_T2PR0
   178                           	dabs	1,0x50,1
   179                           	dabs	1,0x267,0,_T1EN
   180                           	dabs	1,0x4C,1
   181                           	dabs	1,0x266,0,_PWM0E
   182                           	dabs	1,0x4C,1
   183                           	dabs	1,0x265,0,_T0OSCEN
   184                           	dabs	1,0x4C,1
   185                           	dabs	1,0x264,0,_T1CK1
   186                           	dabs	1,0x4C,1
   187                           	dabs	1,0x263,0,_T1CK0
   188                           	dabs	1,0x4C,1
   189                           	dabs	1,0x262,0,_T1PR2
   190                           	dabs	1,0x4C,1
   191                           	dabs	1,0x261,0,_T1PR1
   192                           	dabs	1,0x4C,1
   193                           	dabs	1,0x260,0,_T1PR0
   194                           	dabs	1,0x4C,1
   195                           	dabs	1,0x25F,0,_T0CK
   196                           	dabs	1,0x4B,1
   197                           	dabs	1,0x25E,0,_T2IE
   198                           	dabs	1,0x4B,1
   199                           	dabs	1,0x25D,0,_T2IF
   200                           	dabs	1,0x4B,1
   201                           	dabs	1,0x25C,0,_POR
   202                           	dabs	1,0x4B,1
   203                           	dabs	1,0x25B,0,_BOR
   204                           	dabs	1,0x4B,1
   205                           	dabs	1,0x25A,0,_BOREN
   206                           	dabs	1,0x4B,1
   207                           	dabs	1,0x259,0,_T1IE
   208                           	dabs	1,0x4B,1
   209                           	dabs	1,0x258,0,_T1IF
   210                           	dabs	1,0x4B,1
   211                           	dabs	1,0x237,0,_TRISB7
   212                           	dabs	1,0x46,1
   213                           	dabs	1,0x236,0,_TRISB6
   214                           	dabs	1,0x46,1
   215                           	dabs	1,0x235,0,_TRISB5
   216                           	dabs	1,0x46,1
   217                           	dabs	1,0x234,0,_TRISB4
   218                           	dabs	1,0x46,1
   219                           	dabs	1,0x233,0,_TRISB3
   220                           	dabs	1,0x46,1
   221                           	dabs	1,0x232,0,_TRISB2
   222                           	dabs	1,0x46,1
   223                           	dabs	1,0x231,0,_TRISB1
   224                           	dabs	1,0x46,1
   225                           	dabs	1,0x230,0,_TRISB0
   226                           	dabs	1,0x46,1
   227                           	dabs	1,0x22F,0,_TRISA7
   228                           	dabs	1,0x45,1
   229                           	dabs	1,0x22E,0,_TRISA6
   230                           	dabs	1,0x45,1
   231                           	dabs	1,0x22D,0,_TRISA5
   232                           	dabs	1,0x45,1
   233                           	dabs	1,0x22C,0,_TRISA4
   234                           	dabs	1,0x45,1
   235                           	dabs	1,0x22B,0,_TRISA3
   236                           	dabs	1,0x45,1
   237                           	dabs	1,0x22A,0,_TRISA2
   238                           	dabs	1,0x45,1
   239                           	dabs	1,0x229,0,_TRISA1
   240                           	dabs	1,0x45,1
   241                           	dabs	1,0x228,0,_TRISA0
   242                           	dabs	1,0x45,1
   243                           	dabs	1,0x21F,0,_PHA7
   244                           	dabs	1,0x43,1
   245                           	dabs	1,0x21E,0,_PHA6
   246                           	dabs	1,0x43,1
   247                           	dabs	1,0x21D,0,_PHA5
   248                           	dabs	1,0x43,1
   249                           	dabs	1,0x21C,0,_PHA4
   250                           	dabs	1,0x43,1
   251                           	dabs	1,0x21B,0,_PHA3
   252                           	dabs	1,0x43,1
   253                           	dabs	1,0x21A,0,_PHA2
   254                           	dabs	1,0x43,1
   255                           	dabs	1,0x219,0,_PHA1
   256                           	dabs	1,0x43,1
   257                           	dabs	1,0x218,0,_PHA0
   258                           	dabs	1,0x43,1
   259                           	dabs	1,0x217,0,_PDA7
   260                           	dabs	1,0x42,1
   261                           	dabs	1,0x216,0,_PDA6
   262                           	dabs	1,0x42,1
   263                           	dabs	1,0x215,0,_PDA5
   264                           	dabs	1,0x42,1
   265                           	dabs	1,0x214,0,_PDA4
   266                           	dabs	1,0x42,1
   267                           	dabs	1,0x213,0,_PDA3
   268                           	dabs	1,0x42,1
   269                           	dabs	1,0x212,0,_PDA2
   270                           	dabs	1,0x42,1
   271                           	dabs	1,0x211,0,_PDA1
   272                           	dabs	1,0x42,1
   273                           	dabs	1,0x210,0,_PDA0
   274                           	dabs	1,0x42,1
   275                           	dabs	1,0x20F,0,_WDTEN
   276                           	dabs	1,0x41,1
   277                           	dabs	1,0x20E,0,_INTEDG
   278                           	dabs	1,0x41,1
   279                           	dabs	1,0x20D,0,_T0CS
   280                           	dabs	1,0x41,1
   281                           	dabs	1,0x20C,0,_T0SE
   282                           	dabs	1,0x41,1
   283                           	dabs	1,0x20B,0,_PSA
   284                           	dabs	1,0x41,1
   285                           	dabs	1,0x20A,0,_PS2
   286                           	dabs	1,0x41,1
   287                           	dabs	1,0x209,0,_PS1
   288                           	dabs	1,0x41,1
   289                           	dabs	1,0x208,0,_PS0
   290                           	dabs	1,0x41,1
   291                           	dabs	1,0x201,0,_MTP_CLEN
   292                           	dabs	1,0x40,1
   293                           	dabs	1,0x200,0,_RD_FLAG
   294                           	dabs	1,0x40,1
   295                           	dabs	1,0xBE,1,_OCCUPY0BE
   296                           	dabs	1,0xBF,1,_OCCUPY0BF
   297                           	dabs	1,0x3E,2
   298  0004                     
   299                           	psect	text0
   300  0000                     __ptext0:	
   301                           ;
   302                           ;
   303                           ;
   304                           ;
   305                           ;
   306                           ;
   307                           ;
   308                           ;
   309                           ;
   310                           ;
   311                           ;
   312                           ;
   313                           ;
   314                           ;
   315                           ;
   316                           ;
   317                           ;
   318                           ;
   319                           ;
   320                           ;
   321                           ;
   322                           ;
   323                           ;
   324                           ;
   325                           ;
   326                           ;
   327                           ;
   328                           ;
   329                           ;
   330                           ;
   331                           ;
   332                           ;
   333                           ;
   334                           ;
   335                           ;
   336                           ;
   337                           	;_RD_FLAG
   338  000D                     _PHCON	set	13
   339  000B                     _PDCON	set	11
   340  0009                     _IOCB	set	9
   341  0008                     _LVDCR	set	8
   342  0007                     _IOCA	set	7
   343  0006                     _PORTB	set	6
   344  0005                     _PORTA	set	5
   345  0004                     _FSR	set	4
   346  0000                     _INDF	set	0
   347  0077                     _GIE	set	119
   348  0074                     _PBIF	set	116
   349  0071                     _PBIE	set	113
   350  004E                     _IOCB6	set	78
   351  004A                     _IOCB2	set	74
   352  0047                     _LVDF	set	71
   353                           
   354                           	psect	cinit
   355  0016                     start_initialization:	
   356  0016                     __initialization:	
   357                           ; #config settings
   358                           
   359  0016                     end_of_initialization:	
   360  0016                     __end_of__initialization:	
   361                           ;End of C runtime variable initialization code
   362                           
   363  0016  0183               	clrf	3
   364  0017  29C7               	ljmp	_main	;jump to C main() function
   365                           
   366                           	psect	bssBANK0
   367  0010                     __pbssBANK0:	
   368  0010                     _LED_DimPwm:	
   369  0010                     	ds	2
   370  0012                     _LED_ColorPwm:	
   371  0012                     	ds	2
   372  0014                     Key_Detect@sys_time:	
   373  0014                     	ds	2
   374  0016                     _LastShortPressTime:	
   375  0016                     	ds	2
   376  0018                     _KeyPressTime:	
   377  0018                     	ds	2
   378  001A                     _LED_Y_DimIndex:	
   379  001A                     	ds	1
   380  001B                     _LED_W_DimIndex:	
   381  001B                     	ds	1
   382  001C                     _LedColor:	
   383  001C                     	ds	1
   384  001D                     _ShortPressCount:	
   385  001D                     	ds	1
   386  001E                     Timer2_Isr@timer_1ms:	
   387  001E                     	ds	1
   388  001F                     _KeyTick:	
   389  001F                     	ds	1
   390  0020                     _ShortIndex:	
   391  0020                     	ds	1
   392  0021                     _ChargeDetectTick:	
   393  0021                     	ds	1
   394  0022                     _Cnt2:	
   395  0022                     	ds	1
   396  0023                     _Cnt1:	
   397  0023                     	ds	1
   398  0024                     _BatteryFullCnt2:	
   399  0024                     	ds	1
   400  0025                     _BatteryFullCnt1:	
   401  0025                     	ds	1
   402  0026                     _BatteryFullJudgTick:	
   403  0026                     	ds	1
   404  0027                     _BatteryDieCntSec:	
   405  0027                     	ds	1
   406  0028                     _BatteryCurrCheckLevel:	
   407  0028                     	ds	1
   408  0029                     _BatteryLvdCnt2:	
   409  0029                     	ds	1
   410  002A                     _BatteryLvdCnt1:	
   411  002A                     	ds	1
   412  002B                     _BatteryLvdTick:	
   413  002B                     	ds	1
   414  002C                     _BatteryStatusCnt3:	
   415  002C                     	ds	1
   416  002D                     _BatteryStatusCnt2:	
   417  002D                     	ds	1
   418  002E                     _BatteryStatusCnt1:	
   419  002E                     	ds	1
   420  002F                     _BatteryStatusTick:	
   421  002F                     	ds	1
   422  0030                     _BatteryStatus:	
   423  0030                     	ds	1
   424                           
   425                           	psect	bitbssBANK0
   426  0188                     __pbitbssBANK0:	
   427  0188                     _SleepSig:	
   428  0188                     	ds	1
   429  0189                     _LastLongKeyFlag:	
   430  0189                     	ds	1
   431  018A                     _EveColor:	
   432  018A                     	ds	1
   433  018B                     _EveDim:	
   434  018B                     	ds	1
   435  018C                     _EvePower:	
   436  018C                     	ds	1
   437  018D                     _KeyShortPressTwiceFlag:	
   438  018D                     	ds	1
   439  018E                     _KeyLongPressFlag:	
   440  018E                     	ds	1
   441  018F                     _KeyShortPressFlag:	
   442  018F                     	ds	1
   443  0190                     _BatteryFullFlag:	
   444  0190                     	ds	1
   445  0191                     _BatteryDieCntFinishFlag:	
   446  0191                     	ds	1
   447  0192                     _BatteryLvdStatus:	
   448  0192                     	ds	1
   449  0193                     _ChargeStatus:	
   450  0193                     	ds	1
   451  0194                     _PowerStatus:	
   452  0194                     	ds	1
   453                           
   454                           	psect	bssBANK1l
   455  00C0                     __pbssBANK1l:	
   456  00C0                     _LED_Y_DimArray:	
   457  00C0                     	ds	7
   458  00C7                     _LED_W_DimArray:	
   459  00C7                     	ds	7
   460  00CE                     _PowerOffPrepareToSleepTick:	
   461  00CE                     	ds	2
   462  00D0                     _LED_PWM:	
   463  00D0                     	ds	2
   464                           
   465                           	psect	cstackCOMMON
   466  0000                     __pcstackCOMMON:	
   467  0000                     ??_Battery_Full_Judg:	
   468  0000                     ??_Battery_LvdDetect:	
   469  0000                     ??_Battery_StatusJudg:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0000                     ??_Battery_Init_Data:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0000                     ??_DelayMs:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0000                     ??_Charge_Detect:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0000                     ??_TickTimer_Open:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0000                     ??_Key_Detect:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0000                     ??_Eve_Detect:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0000                     ??_SleepTick_Ctlr:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0000                     ??_Read_Key:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0000                     ??_LED_DimIndex_Ctrl:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0000                     ??_Power_Init:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0000                     ??_RGB_Init:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0000                     ??_Power_Manage:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0000                     ??_Sleep_Manage:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0000                     ??_Power_Turn:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0000                     ??_Sleep_Init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0000                     ??_Sleep_Jump:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0000                     ??_Sleep_Wakeup:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0000                     ??_Lvd_Init:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0000                     ??_Get_Lvdf:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0000                     ??_SetLVD_Level:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0000                     ??_Battery_Manage:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0000                     ??_BatteryTick_Ctrl:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0000                     ??_Battery_Init:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0000                     ??_Charge_Init:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0000                     ??_ChargeTick_Ctrl:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0000                     ??_Charge_Config:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0000                     ??_Charge_Manage:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0000                     ??_Tick_Timer_Init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0000                     ??_TickTimer_Close:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0000                     ??_Key_Interrupt_Open:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0000                     ??_Key_Interrupt_Close:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0000                     ??_ChargeDetect_Interrupt_Open:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0000                     ??_ChargeDetect_Interrupt_Close:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0000                     ??_DelayUs2x:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0000                     ??_Eve_Manage:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0000                     ??_inital:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0000                     ??_sysinitial:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0000                     ??_ramInitial:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0000                     ??_key_Init:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0000                     ??_led_Init:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0000                     ??_LED_Dim:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0000                     ??_LED_Color:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0000                     ??_LED_Status:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0000                     ??_LED_PWM_Set:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0000                     ??_LED_Manage:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0000                     ??_main:	
   608                           ; 1 bytes @ 0x0
   609                           
   610                           
   611                           	psect	cstackBANK0
   612  0033                     __pcstackBANK0:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0033                     ?_Get_Lvdf:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0033                     ?_Battery_Full_Judg:	
   619  0033                     ?_Battery_LvdDetect:	
   620                           ; 1 bit 
   621                           
   622  0033                     ?_Battery_StatusJudg:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0033                     ?_Battery_Init_Data:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0033                     ?_Charge_Detect:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0033                     ?_TickTimer_Open:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0033                     ?_Key_Detect:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0033                     ?_Eve_Detect:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0033                     ?_SleepTick_Ctlr:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0033                     ?_LED_DimIndex_Ctrl:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0033                     ?_Power_Init:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0033                     ?_RGB_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0033                     ?_Power_Manage:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0033                     ?_Sleep_Manage:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0033                     ?_Power_Turn:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0033                     ?_Sleep_Init:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0033                     ?_Sleep_Jump:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0033                     ?_Sleep_Wakeup:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0033                     ?_Lvd_Init:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0033                     ?_SetLVD_Level:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0033                     ?_Battery_Manage:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0033                     ?_BatteryTick_Ctrl:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0033                     ?_Battery_Init:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0033                     ?_Charge_Init:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0033                     ?_ChargeTick_Ctrl:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0033                     ?_Charge_Config:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0033                     ?_Charge_Manage:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0033                     ?_Tick_Timer_Init:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0033                     ?_TickTimer_Close:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0033                     ?_Key_Interrupt_Open:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0033                     ?_Key_Interrupt_Close:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0033                     ?_ChargeDetect_Interrupt_Open:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0033                     ?_ChargeDetect_Interrupt_Close:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0033                     ?_DelayUs2x:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0033                     ?_Eve_Manage:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0033                     ?_inital:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0033                     ?_sysinitial:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0033                     ?_ramInitial:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0033                     ?_Timer2_Isr:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0033                     ??_Timer2_Isr:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0033                     ?_key_Init:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0033                     ?_led_Init:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0033                     ?_LED_Dim:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0033                     ?_LED_Color:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0033                     ?_LED_Status:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0033                     ?_LED_PWM_Set:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0033                     ?_LED_Manage:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0033                     ?_main:	
   758                           ; 1 bytes @ 0x0
   759                           
   760                           
   761                           ; 1 bytes @ 0x0
   762                           ; 1 bytes @ 0x0
   763  0033                     	ds	2
   764  0035                     ?_Read_Key:	
   765  0035                     Get_Lvdf@result:	
   766  0035                     SetLVD_Level@level:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0035                     DelayUs2x@t:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0035                     LED_Color@index:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0035                     Read_Key@sys_time:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0035                     LED_Status@pwm:	
   779                           ; 1 bytes @ 0x2
   780                           
   781                           
   782                           ; 2 bytes @ 0x2
   783                           ; 2 bytes @ 0x2
   784  0035                     	ds	1
   785  0036                     ?_DelayMs:	
   786  0036                     DelayMs@t:	
   787                           
   788                           ; 1 bytes @ 0x3
   789                           ; 2 bytes @ 0x3
   790  0036                     	ds	1
   791  0037                     Read_Key@interval:	
   792                           
   793                           ; 2 bytes @ 0x4
   794  0037                     	ds	1
   795  0038                     Battery_Init_Data@BatteryLowCnt:	
   796                           
   797                           ; 1 bytes @ 0x5
   798  0038                     	ds	1
   799  0039                     Battery_Init_Data@i:	
   800  0039                     Read_Key@interval_1713:	
   801                           
   802                           ; 1 bytes @ 0x6
   803                           ; 2 bytes @ 0x6
   804  0039                     	ds	2
   805                           
   806                           	psect	maintext
   807  01C7                     __pmaintext:	
   808  01C7                     _main:	
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 59 in file "main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : B00/0
   825 ;;		On exit  : 100/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
   828 ;;      Params:         0       0       0       0
   829 ;;      Locals:         0       0       0       0
   830 ;;      Temps:          0       0       0       0
   831 ;;      Totals:         0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels required when called:    6
   834 ;; This function calls:
   835 ;;		_Battery_Init
   836 ;;		_Battery_Manage
   837 ;;		_Charge_Config
   838 ;;		_Charge_Manage
   839 ;;		_DelayMs
   840 ;;		_Eve_Manage
   841 ;;		_LED_Manage
   842 ;;		_Power_Init
   843 ;;		_Power_Manage
   844 ;;		_RGB_Init
   845 ;;		_Sleep_Manage
   846 ;;		_Tick_Timer_Init
   847 ;;		_inital
   848 ;;		_key_Init
   849 ;;		_led_Init
   850 ;;		_ramInitial
   851 ;;		_sysinitial
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           ;psect for function _main
   857                           
   858                           
   859                           ;main.c: 61: ramInitial();
   860                           ;incstack = 0
   861                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   862  01C7  223C               	fcall	_ramInitial
   863                           
   864                           ;main.c: 62: inital();
   865  01C8  226E               	fcall	_inital
   866                           
   867                           ;main.c: 63: sysinitial();
   868  01C9  22E1               	fcall	_sysinitial
   869                           
   870                           ;main.c: 64: DelayMs(100);
   871  01CA  3064               	movlw	100
   872  01CB  00B6               	movwf	DelayMs@t
   873  01CC  01B7               	clrf	DelayMs@t+1
   874  01CD  225E               	fcall	_DelayMs
   875                           
   876                           ;main.c: 72: Power_Init();
   877  01CE  2308               	fcall	_Power_Init
   878                           
   879                           ;main.c: 73: key_Init();
   880  01CF  22E5               	fcall	_key_Init
   881                           
   882                           ;main.c: 74: led_Init();
   883  01D0  20C4               	fcall	_led_Init
   884                           
   885                           ;main.c: 76: Tick_Timer_Init();
   886  01D1  22BB               	fcall	_Tick_Timer_Init
   887                           
   888                           ;main.c: 77: Charge_Config();
   889  01D2  2305               	fcall	_Charge_Config
   890                           
   891                           ;main.c: 78: Battery_Init();
   892  01D3  230C               	fcall	_Battery_Init
   893                           
   894                           ;main.c: 79: RGB_Init();
   895  01D4  22D7               	fcall	_RGB_Init
   896                           
   897                           ;main.c: 81: GIE = 1;
   898  01D5  178E               	bsf	14,7	;volatile
   899  01D6                     l7396:	
   900                           
   901                           ;main.c: 84: {
   902                           ;main.c: 86: Eve_Manage();
   903  01D6  230A               	fcall	_Eve_Manage
   904                           
   905                           ;main.c: 87: Power_Manage();
   906  01D7  230E               	fcall	_Power_Manage
   907                           
   908                           ;main.c: 88: LED_Manage();
   909  01D8  22F1               	fcall	_LED_Manage
   910                           
   911                           ;main.c: 89: Charge_Manage();
   912  01D9  230F               	fcall	_Charge_Manage
   913                           
   914                           ;main.c: 90: Battery_Manage();
   915  01DA  2295               	fcall	_Battery_Manage
   916                           
   917                           ;main.c: 91: Sleep_Manage();
   918  01DB  227D               	fcall	_Sleep_Manage
   919  01DC  29D6               	goto	l7396
   920  01DD                     __end_of_main:	
   921                           
   922                           	psect	text1
   923  02E1                     __ptext1:	
   924  02E1                     _sysinitial:	
   925 ;; *************** function _sysinitial *****************
   926 ;; Defined at:
   927 ;;		line 46 in file "inital.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;		None
   930 ;; Auto vars:     Size  Location     Type
   931 ;;		None
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg
   936 ;; Tracked objects:
   937 ;;		On entry : B00/0
   938 ;;		On exit  : B00/0
   939 ;;		Unchanged: A00/0
   940 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
   941 ;;      Params:         0       0       0       0
   942 ;;      Locals:         0       0       0       0
   943 ;;      Temps:          0       0       0       0
   944 ;;      Totals:         0       0       0       0
   945 ;;Total ram usage:        0 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    2
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           ;psect for function _sysinitial
   955                           
   956                           
   957                           ;inital.c: 49: T0OSCEN=1;
   958                           ;incstack = 0
   959                           ; Regs used in _sysinitial: [wreg]
   960  02E1  16CC               	bsf	76,5	;volatile
   961                           
   962                           ;inital.c: 50: OPTION=0xBF;
   963  02E2  30BF               	movlw	191
   964  02E3  00C1               	movwf	65	;volatile
   965  02E4  0008               	return
   966  02E5                     __end_of_sysinitial:	
   967                           
   968                           	psect	text2
   969  023C                     __ptext2:	
   970  023C                     _ramInitial:	
   971 ;; *************** function _ramInitial *****************
   972 ;; Defined at:
   973 ;;		line 54 in file "inital.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;		None
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : B00/0
   984 ;;		On exit  : B00/0
   985 ;;		Unchanged: A00/0
   986 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
   987 ;;      Params:         0       0       0       0
   988 ;;      Locals:         0       0       0       0
   989 ;;      Temps:          0       0       0       0
   990 ;;      Totals:         0       0       0       0
   991 ;;Total ram usage:        0 bytes
   992 ;; Hardware stack levels used:    1
   993 ;; Hardware stack levels required when called:    2
   994 ;; This function calls:
   995 ;;		Nothing
   996 ;; This function is called by:
   997 ;;		_main
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           ;psect for function _ramInitial
  1001                           
  1002                           
  1003                           ;inital.c: 56: FSR=0X3f;
  1004                           ;incstack = 0
  1005                           ; Regs used in _ramInitial: [wreg+status,2+status,0]
  1006  023C  303F               	movlw	63
  1007  023D  0084               	movwf	4	;volatile
  1008  023E                     l7248:	
  1009                           
  1010                           ;inital.c: 58: INDF=0;
  1011  023E  0180               	clrf	0	;volatile
  1012                           
  1013                           ;inital.c: 59: FSR--;
  1014  023F  0384               	decf	4,f	;volatile
  1015                           
  1016                           ;inital.c: 60: }while(FSR != 0x0f);
  1017  0240  300F               	movlw	15
  1018  0241  0604               	xorwf	4,w	;volatile
  1019  0242  1D03               	btfss	3,2
  1020  0243  2A3E               	goto	l7248
  1021                           
  1022                           ;inital.c: 62: FSR=0Xdf;
  1023  0244  30DF               	movlw	223
  1024  0245  0084               	movwf	4	;volatile
  1025  0246                     l7256:	
  1026                           
  1027                           ;inital.c: 64: INDF=0;
  1028  0246  0180               	clrf	0	;volatile
  1029                           
  1030                           ;inital.c: 65: FSR--;
  1031  0247  0384               	decf	4,f	;volatile
  1032                           
  1033                           ;inital.c: 66: }while(FSR != 0x8f);
  1034  0248  308F               	movlw	143
  1035  0249  0604               	xorwf	4,w	;volatile
  1036  024A  1903               	btfsc	3,2
  1037  024B  0008               	return
  1038  024C  2A46               	goto	l7256
  1039  024D                     __end_of_ramInitial:	
  1040                           
  1041                           	psect	text3
  1042  00C4                     __ptext3:	
  1043  00C4                     _led_Init:	
  1044 ;; *************** function _led_Init *****************
  1045 ;; Defined at:
  1046 ;;		line 16 in file "led.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, status,2
  1055 ;; Tracked objects:
  1056 ;;		On entry : 100/0
  1057 ;;		On exit  : 100/100
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1060 ;;      Params:         0       0       0       0
  1061 ;;      Locals:         0       0       0       0
  1062 ;;      Temps:          0       0       0       0
  1063 ;;      Totals:         0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    2
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           ;psect for function _led_Init
  1074                           
  1075                           
  1076                           ;led.c: 18: WDTEN=0;
  1077                           ;incstack = 0
  1078                           ; Regs used in _led_Init: [wreg+status,2]
  1079  00C4  13C1               	bcf	65,7	;volatile
  1080                           
  1081                           ;led.c: 19: OPTION=0X00;
  1082  00C5  01C1               	clrf	65	;volatile
  1083                           
  1084                           ;led.c: 21: TMR2H=0x00;
  1085  00C6  01D1               	clrf	81	;volatile
  1086                           
  1087                           ;led.c: 22: PWM0E=1;
  1088  00C7  174C               	bsf	76,6	;volatile
  1089                           
  1090                           ;led.c: 23: PWM1E=1;
  1091  00C8  1750               	bsf	80,6	;volatile
  1092                           
  1093                           ;led.c: 26: T1=0x34;
  1094  00C9  3034               	movlw	52
  1095  00CA  00CD               	movwf	77	;volatile
  1096                           
  1097                           ;led.c: 27: T1LOAD=0xf0;
  1098  00CB  30F0               	movlw	240
  1099  00CC  00CE               	movwf	78	;volatile
  1100                           
  1101                           ;led.c: 28: PWM0P=0x0;
  1102  00CD  01CF               	clrf	79	;volatile
  1103                           
  1104                           ;led.c: 29: T1CON=0x40;
  1105  00CE  3040               	movlw	64
  1106  00CF  00CC               	movwf	76	;volatile
  1107                           
  1108                           ;led.c: 31: T1EN=1;
  1109  00D0  17CC               	bsf	76,7	;volatile
  1110                           
  1111                           ;led.c: 33: T2=0x34;
  1112  00D1  3034               	movlw	52
  1113  00D2  00D2               	movwf	82	;volatile
  1114                           
  1115                           ;led.c: 34: T2LOAD=0xf0;
  1116  00D3  30F0               	movlw	240
  1117  00D4  00D3               	movwf	83	;volatile
  1118                           
  1119                           ;led.c: 35: PWM1P=0x0;
  1120  00D5  01D4               	clrf	84	;volatile
  1121                           
  1122                           ;led.c: 36: T2CON=0x40;
  1123  00D6  3040               	movlw	64
  1124  00D7  00D0               	movwf	80	;volatile
  1125                           
  1126                           ;led.c: 38: T2EN=1;
  1127  00D8  17D0               	bsf	80,7	;volatile
  1128                           
  1129                           ;led.c: 40: LED_W_DimIndex = 6;
  1130  00D9  3006               	movlw	6
  1131  00DA  009B               	movwf	_LED_W_DimIndex
  1132                           
  1133                           ;led.c: 41: LED_Y_DimIndex = 6;
  1134  00DB  009A               	movwf	_LED_Y_DimIndex
  1135                           
  1136                           ;led.c: 43: LED_W_DimArray[0] = 10;
  1137  00DC  300A               	movlw	10
  1138  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1139  00DE  00C7               	movwf	_LED_W_DimArray^(0+128)
  1140                           
  1141                           ;led.c: 44: LED_W_DimArray[1] = 20;
  1142  00DF  3014               	movlw	20
  1143  00E0  00C8               	movwf	(_LED_W_DimArray^(0+128)+1)
  1144                           
  1145                           ;led.c: 45: LED_W_DimArray[2] = 30;
  1146  00E1  301E               	movlw	30
  1147  00E2  00C9               	movwf	(_LED_W_DimArray^(0+128)+2)
  1148                           
  1149                           ;led.c: 46: LED_W_DimArray[3] = 40;
  1150  00E3  3028               	movlw	40
  1151  00E4  00CA               	movwf	(_LED_W_DimArray^(0+128)+3)
  1152                           
  1153                           ;led.c: 47: LED_W_DimArray[4] = 50;
  1154  00E5  3032               	movlw	50
  1155  00E6  00CB               	movwf	(_LED_W_DimArray^(0+128)+4)
  1156                           
  1157                           ;led.c: 48: LED_W_DimArray[5] = 60;
  1158  00E7  303C               	movlw	60
  1159  00E8  00CC               	movwf	(_LED_W_DimArray^(0+128)+5)
  1160                           
  1161                           ;led.c: 49: LED_W_DimArray[6] = 70;
  1162  00E9  3046               	movlw	70
  1163  00EA  00CD               	movwf	(_LED_W_DimArray^(0+128)+6)
  1164                           
  1165                           ;led.c: 51: LED_Y_DimArray[0] = 10;
  1166  00EB  300A               	movlw	10
  1167  00EC  00C0               	movwf	_LED_Y_DimArray^(0+128)
  1168                           
  1169                           ;led.c: 52: LED_Y_DimArray[1] = 20;
  1170  00ED  3014               	movlw	20
  1171  00EE  00C1               	movwf	(_LED_Y_DimArray^(0+128)+1)
  1172                           
  1173                           ;led.c: 53: LED_Y_DimArray[2] = 30;
  1174  00EF  301E               	movlw	30
  1175  00F0  00C2               	movwf	(_LED_Y_DimArray^(0+128)+2)
  1176                           
  1177                           ;led.c: 54: LED_Y_DimArray[3] = 40;
  1178  00F1  3028               	movlw	40
  1179  00F2  00C3               	movwf	(_LED_Y_DimArray^(0+128)+3)
  1180                           
  1181                           ;led.c: 55: LED_Y_DimArray[4] = 50;
  1182  00F3  3032               	movlw	50
  1183  00F4  00C4               	movwf	(_LED_Y_DimArray^(0+128)+4)
  1184                           
  1185                           ;led.c: 56: LED_Y_DimArray[5] = 60;
  1186  00F5  303C               	movlw	60
  1187  00F6  00C5               	movwf	(_LED_Y_DimArray^(0+128)+5)
  1188                           
  1189                           ;led.c: 57: LED_Y_DimArray[6] = 70;
  1190  00F7  3046               	movlw	70
  1191  00F8  00C6               	movwf	(_LED_Y_DimArray^(0+128)+6)
  1192  00F9  0008               	return
  1193  00FA                     __end_of_led_Init:	
  1194                           
  1195                           	psect	text4
  1196  02E5                     __ptext4:	
  1197  02E5                     _key_Init:	
  1198 ;; *************** function _key_Init *****************
  1199 ;; Defined at:
  1200 ;;		line 80 in file "key.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		None
  1209 ;; Tracked objects:
  1210 ;;		On entry : 100/0
  1211 ;;		On exit  : 100/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1214 ;;      Params:         0       0       0       0
  1215 ;;      Locals:         0       0       0       0
  1216 ;;      Temps:          0       0       0       0
  1217 ;;      Totals:         0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    2
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           ;psect for function _key_Init
  1228                           
  1229                           
  1230                           ;key.c: 82: *(unsigned int *)0x46 |= (0x04);
  1231                           ;incstack = 0
  1232                           ; Regs used in _key_Init: []
  1233  02E5  1546               	bsf	70,2
  1234                           
  1235                           ;key.c: 83: *(unsigned int *)0x0D &= ~(0x04);
  1236  02E6  110D               	bcf	13,2
  1237                           
  1238                           ;key.c: 84: *(unsigned int *)0x0B |= (0x04);
  1239  02E7  150B               	bsf	11,2
  1240  02E8  0008               	return
  1241  02E9                     __end_of_key_Init:	
  1242                           
  1243                           	psect	text5
  1244  026E                     __ptext5:	
  1245  026E                     _inital:	
  1246 ;; *************** function _inital *****************
  1247 ;; Defined at:
  1248 ;;		line 13 in file "inital.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;		None
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  1    wreg      void 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2
  1257 ;; Tracked objects:
  1258 ;;		On entry : B00/0
  1259 ;;		On exit  : B00/0
  1260 ;;		Unchanged: A00/0
  1261 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1262 ;;      Params:         0       0       0       0
  1263 ;;      Locals:         0       0       0       0
  1264 ;;      Temps:          0       0       0       0
  1265 ;;      Totals:         0       0       0       0
  1266 ;;Total ram usage:        0 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; Hardware stack levels required when called:    2
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_main
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           ;psect for function _inital
  1276                           
  1277                           
  1278                           ;inital.c: 15: ANSELL=0X00;
  1279                           ;incstack = 0
  1280                           ; Regs used in _inital: [wreg+status,2]
  1281  026E  01D6               	clrf	86	;volatile
  1282                           
  1283                           ;inital.c: 16: ANSELH=0X00;
  1284  026F  01D7               	clrf	87	;volatile
  1285                           
  1286                           ;inital.c: 18: TRISA=0X00;
  1287  0270  01C5               	clrf	69	;volatile
  1288                           
  1289                           ;inital.c: 19: TRISB=0X00;
  1290  0271  01C6               	clrf	70	;volatile
  1291                           
  1292                           ;inital.c: 22: PORTA=0X00;
  1293  0272  0185               	clrf	5	;volatile
  1294                           
  1295                           ;inital.c: 23: PORTB=0X00;
  1296  0273  0186               	clrf	6	;volatile
  1297                           
  1298                           ;inital.c: 26: PHCON1=0XFF;
  1299  0274  30FF               	movlw	255
  1300  0275  00C3               	movwf	67	;volatile
  1301                           
  1302                           ;inital.c: 27: PHCON=0XFF;
  1303  0276  008D               	movwf	13	;volatile
  1304                           
  1305                           ;inital.c: 30: PDCON1=0xFF;
  1306  0277  00C2               	movwf	66	;volatile
  1307                           
  1308                           ;inital.c: 31: PDCON=0xFF;
  1309  0278  008B               	movwf	11	;volatile
  1310                           
  1311                           ;inital.c: 34: IOCA=0X00;
  1312  0279  0187               	clrf	7	;volatile
  1313                           
  1314                           ;inital.c: 35: IOCB=0X00;
  1315  027A  0189               	clrf	9	;volatile
  1316                           
  1317                           ;inital.c: 38: PBIE=0;
  1318  027B  108E               	bcf	14,1	;volatile
  1319  027C  0008               	return
  1320  027D                     __end_of_inital:	
  1321                           
  1322                           	psect	text6
  1323  02BB                     __ptext6:	
  1324  02BB                     _Tick_Timer_Init:	
  1325 ;; *************** function _Tick_Timer_Init *****************
  1326 ;; Defined at:
  1327 ;;		line 4 in file "driver.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;		None
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;		None
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 100/100
  1338 ;;		On exit  : 100/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1341 ;;      Params:         0       0       0       0
  1342 ;;      Locals:         0       0       0       0
  1343 ;;      Temps:          0       0       0       0
  1344 ;;      Totals:         0       0       0       0
  1345 ;;Total ram usage:        0 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    3
  1348 ;; This function calls:
  1349 ;;		_TickTimer_Open
  1350 ;; This function is called by:
  1351 ;;		_main
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           ;psect for function _Tick_Timer_Init
  1355                           
  1356                           
  1357                           ;driver.c: 6: T2 = 0xFF;
  1358                           ;incstack = 0
  1359                           ; Regs used in _Tick_Timer_Init: [wreg+status,2+status,0+pclath+cstack]
  1360  02BB  30FF               	movlw	255
  1361  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  1362  02BD  00D2               	movwf	82	;volatile
  1363                           
  1364                           ;driver.c: 7: TMR2H = 0x00;
  1365  02BE  01D1               	clrf	81	;volatile
  1366                           
  1367                           ;driver.c: 8: T2LOAD = 0xFF;
  1368  02BF  00D3               	movwf	83	;volatile
  1369                           
  1370                           ;driver.c: 10: TickTimer_Open();
  1371  02C0  2AE9               	ljmp	l6818
  1372  02C1                     __end_of_Tick_Timer_Init:	
  1373                           
  1374                           	psect	text7
  1375  027D                     __ptext7:	
  1376  027D                     _Sleep_Manage:	
  1377 ;; *************** function _Sleep_Manage *****************
  1378 ;; Defined at:
  1379 ;;		line 34 in file "sleep.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 100/0
  1390 ;;		On exit  : 100/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1393 ;;      Params:         0       0       0       0
  1394 ;;      Locals:         0       0       0       0
  1395 ;;      Temps:          0       0       0       0
  1396 ;;      Totals:         0       0       0       0
  1397 ;;Total ram usage:        0 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    5
  1400 ;; This function calls:
  1401 ;;		_Battery_Init_Data
  1402 ;;		_DelayMs
  1403 ;;		_Sleep_Init
  1404 ;;		_Sleep_Jump
  1405 ;;		_Sleep_Wakeup
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           ;psect for function _Sleep_Manage
  1411                           
  1412                           
  1413                           ;sleep.c: 36: if( !SleepSig )
  1414                           ;incstack = 0
  1415                           ; Regs used in _Sleep_Manage: [wreg+status,2+status,0+pclath+cstack]
  1416  027D  1C31               	btfss	_SleepSig/(0+8),_SleepSig& (0+7)
  1417  027E  0008               	return
  1418                           
  1419                           ;sleep.c: 39: }
  1420                           ;sleep.c: 40: SleepSig = 0;
  1421  027F  1031               	bcf	_SleepSig/(0+8),_SleepSig& (0+7)
  1422                           
  1423                           ;sleep.c: 42: Sleep_Init();
  1424  0280  22D2               	fcall	_Sleep_Init
  1425                           
  1426                           ;sleep.c: 44: Sleep_Jump();
  1427  0281  22A6               	fcall	_Sleep_Jump
  1428                           
  1429                           ;sleep.c: 46: DelayMs(3);
  1430  0282  3003               	movlw	3
  1431  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0284  00B6               	movwf	DelayMs@t
  1433  0285  01B7               	clrf	DelayMs@t+1
  1434  0286  225E               	fcall	_DelayMs
  1435                           
  1436                           ;sleep.c: 48: Battery_Init_Data();
  1437  0287  21B0               	fcall	_Battery_Init_Data
  1438                           
  1439                           ;sleep.c: 50: Sleep_Wakeup();
  1440  0288  2ACD               	ljmp	l7164
  1441  0289                     __end_of_Sleep_Manage:	
  1442                           
  1443                           	psect	text8
  1444  02CD                     __ptext8:	
  1445  02CD                     _Sleep_Wakeup:	
  1446 ;; *************** function _Sleep_Wakeup *****************
  1447 ;; Defined at:
  1448 ;;		line 62 in file "sleep.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		status,2, status,0, pclath, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 100/0
  1459 ;;		On exit  : 100/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1462 ;;      Params:         0       0       0       0
  1463 ;;      Locals:         0       0       0       0
  1464 ;;      Temps:          0       0       0       0
  1465 ;;      Totals:         0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    3
  1469 ;; This function calls:
  1470 ;;		_ChargeDetect_Interrupt_Close
  1471 ;;		_Key_Interrupt_Close
  1472 ;;		_TickTimer_Open
  1473 ;; This function is called by:
  1474 ;;		_Sleep_Manage
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           ;psect for function _Sleep_Wakeup
  1478                           
  1479  02CD                     l7164:	
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _Sleep_Wakeup: [status,2+status,0+pclath+cstack]
  1483                           ;sleep.c: 64: ChargeDetect_Interrupt_Close();
  1484  02CD  22FC               	fcall	_ChargeDetect_Interrupt_Close
  1485                           
  1486                           ;sleep.c: 65: Key_Interrupt_Close();
  1487  02CE  22F9               	fcall	_Key_Interrupt_Close
  1488                           
  1489                           ;sleep.c: 66: TickTimer_Open();
  1490  02CF  22E9               	fcall	_TickTimer_Open
  1491                           
  1492                           ;sleep.c: 68: GIE = 1;
  1493  02D0  178E               	bsf	14,7	;volatile
  1494  02D1  0008               	return
  1495  02D2                     __end_of_Sleep_Wakeup:	
  1496                           
  1497                           	psect	text9
  1498  02E9                     __ptext9:	
  1499  02E9                     _TickTimer_Open:	
  1500 ;; *************** function _TickTimer_Open *****************
  1501 ;; Defined at:
  1502 ;;		line 22 in file "driver.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;		None
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;		None
  1507 ;; Return value:  Size  Location     Type
  1508 ;;                  1    wreg      void 
  1509 ;; Registers used:
  1510 ;;		None
  1511 ;; Tracked objects:
  1512 ;;		On entry : 100/0
  1513 ;;		On exit  : 100/0
  1514 ;;		Unchanged: 0/0
  1515 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1516 ;;      Params:         0       0       0       0
  1517 ;;      Locals:         0       0       0       0
  1518 ;;      Temps:          0       0       0       0
  1519 ;;      Totals:         0       0       0       0
  1520 ;;Total ram usage:        0 bytes
  1521 ;; Hardware stack levels used:    1
  1522 ;; Hardware stack levels required when called:    2
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		_Tick_Timer_Init
  1527 ;;		_Sleep_Wakeup
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           ;psect for function _TickTimer_Open
  1531                           
  1532  02E9                     l6818:	
  1533                           
  1534                           ;incstack = 0
  1535                           ; Regs used in _TickTimer_Open: []
  1536                           ;driver.c: 24: T2IE = 1;
  1537  02E9  174B               	bsf	75,6	;volatile
  1538                           
  1539                           ;driver.c: 25: T2EN = 1;
  1540  02EA  17D0               	bsf	80,7	;volatile
  1541                           
  1542                           ;driver.c: 27: T2IF = 0;
  1543  02EB  12CB               	bcf	75,5	;volatile
  1544  02EC  0008               	return
  1545  02ED                     __end_of_TickTimer_Open:	
  1546                           
  1547                           	psect	text10
  1548  02F9                     __ptext10:	
  1549  02F9                     _Key_Interrupt_Close:	
  1550 ;; *************** function _Key_Interrupt_Close *****************
  1551 ;; Defined at:
  1552 ;;		line 37 in file "driver.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		None
  1561 ;; Tracked objects:
  1562 ;;		On entry : 100/0
  1563 ;;		On exit  : 100/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1566 ;;      Params:         0       0       0       0
  1567 ;;      Locals:         0       0       0       0
  1568 ;;      Temps:          0       0       0       0
  1569 ;;      Totals:         0       0       0       0
  1570 ;;Total ram usage:        0 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    2
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_Sleep_Wakeup
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           ;psect for function _Key_Interrupt_Close
  1580                           
  1581                           
  1582                           ;driver.c: 40: PBIE = 0;
  1583                           ;incstack = 0
  1584                           ; Regs used in _Key_Interrupt_Close: []
  1585  02F9  108E               	bcf	14,1	;volatile
  1586                           
  1587                           ;driver.c: 41: IOCB2 = 0;
  1588  02FA  1109               	bcf	9,2	;volatile
  1589  02FB  0008               	return
  1590  02FC                     __end_of_Key_Interrupt_Close:	
  1591                           
  1592                           	psect	text11
  1593  02FC                     __ptext11:	
  1594  02FC                     _ChargeDetect_Interrupt_Close:	
  1595 ;; *************** function _ChargeDetect_Interrupt_Close *****************
  1596 ;; Defined at:
  1597 ;;		line 54 in file "driver.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		None
  1606 ;; Tracked objects:
  1607 ;;		On entry : 100/0
  1608 ;;		On exit  : 100/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1611 ;;      Params:         0       0       0       0
  1612 ;;      Locals:         0       0       0       0
  1613 ;;      Temps:          0       0       0       0
  1614 ;;      Totals:         0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    2
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_Sleep_Wakeup
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           ;psect for function _ChargeDetect_Interrupt_Close
  1625                           
  1626                           
  1627                           ;driver.c: 59: PBIE = 0;
  1628                           ;incstack = 0
  1629                           ; Regs used in _ChargeDetect_Interrupt_Close: []
  1630  02FC  108E               	bcf	14,1	;volatile
  1631                           
  1632                           ;driver.c: 60: IOCB6 = 0;
  1633  02FD  1309               	bcf	9,6	;volatile
  1634  02FE  0008               	return
  1635  02FF                     __end_of_ChargeDetect_Interrupt_Close:	
  1636                           
  1637                           	psect	text12
  1638  02A6                     __ptext12:	
  1639  02A6                     _Sleep_Jump:	
  1640 ;; *************** function _Sleep_Jump *****************
  1641 ;; Defined at:
  1642 ;;		line 71 in file "sleep.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		None
  1651 ;; Tracked objects:
  1652 ;;		On entry : 100/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1656 ;;      Params:         0       0       0       0
  1657 ;;      Locals:         0       0       0       0
  1658 ;;      Temps:          0       0       0       0
  1659 ;;      Totals:         0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_Sleep_Manage
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           ;psect for function _Sleep_Jump
  1670                           
  1671                           
  1672                           ;sleep.c: 73: T0OSCEN=0;
  1673                           ;incstack = 0
  1674                           ; Regs used in _Sleep_Jump: []
  1675  02A6  12CC               	bcf	76,5	;volatile
  1676  02A7  0000               	nop	;# 
  1677  02A8  0000               	nop	;# 
  1678  02A9  0063               	sleep	;# 
  1679  02AA  0000               	nop	;# 
  1680  02AB  0000               	nop	;# 
  1681  02AC  0008               	return
  1682  02AD                     __end_of_Sleep_Jump:	
  1683                           
  1684                           	psect	text13
  1685  02D2                     __ptext13:	
  1686  02D2                     _Sleep_Init:	
  1687 ;; *************** function _Sleep_Init *****************
  1688 ;; Defined at:
  1689 ;;		line 53 in file "sleep.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		status,2, status,0, pclath, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 100/0
  1700 ;;		On exit  : 100/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1703 ;;      Params:         0       0       0       0
  1704 ;;      Locals:         0       0       0       0
  1705 ;;      Temps:          0       0       0       0
  1706 ;;      Totals:         0       0       0       0
  1707 ;;Total ram usage:        0 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		_ChargeDetect_Interrupt_Open
  1712 ;;		_Key_Interrupt_Open
  1713 ;;		_TickTimer_Close
  1714 ;; This function is called by:
  1715 ;;		_Sleep_Manage
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           ;psect for function _Sleep_Init
  1719                           
  1720                           
  1721                           ;sleep.c: 55: TickTimer_Close();
  1722                           ;incstack = 0
  1723                           ; Regs used in _Sleep_Init: [status,2+status,0+pclath+cstack]
  1724  02D2  22ED               	fcall	_TickTimer_Close
  1725                           
  1726                           ;sleep.c: 56: Key_Interrupt_Open();
  1727  02D3  22FF               	fcall	_Key_Interrupt_Open
  1728                           
  1729                           ;sleep.c: 57: ChargeDetect_Interrupt_Open();
  1730  02D4  2302               	fcall	_ChargeDetect_Interrupt_Open
  1731                           
  1732                           ;sleep.c: 59: GIE = 0;
  1733  02D5  138E               	bcf	14,7	;volatile
  1734  02D6  0008               	return
  1735  02D7                     __end_of_Sleep_Init:	
  1736                           
  1737                           	psect	text14
  1738  02ED                     __ptext14:	
  1739  02ED                     _TickTimer_Close:	
  1740 ;; *************** function _TickTimer_Close *****************
  1741 ;; Defined at:
  1742 ;;		line 13 in file "driver.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  1    wreg      void 
  1749 ;; Registers used:
  1750 ;;		None
  1751 ;; Tracked objects:
  1752 ;;		On entry : 100/0
  1753 ;;		On exit  : 100/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1756 ;;      Params:         0       0       0       0
  1757 ;;      Locals:         0       0       0       0
  1758 ;;      Temps:          0       0       0       0
  1759 ;;      Totals:         0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    2
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_Sleep_Init
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           ;psect for function _TickTimer_Close
  1770                           
  1771                           
  1772                           ;driver.c: 15: T2IE = 0;
  1773                           ;incstack = 0
  1774                           ; Regs used in _TickTimer_Close: []
  1775  02ED  134B               	bcf	75,6	;volatile
  1776                           
  1777                           ;driver.c: 16: T2EN = 0;
  1778  02EE  13D0               	bcf	80,7	;volatile
  1779                           
  1780                           ;driver.c: 18: T2IF = 0;
  1781  02EF  12CB               	bcf	75,5	;volatile
  1782  02F0  0008               	return
  1783  02F1                     __end_of_TickTimer_Close:	
  1784                           
  1785                           	psect	text15
  1786  02FF                     __ptext15:	
  1787  02FF                     _Key_Interrupt_Open:	
  1788 ;; *************** function _Key_Interrupt_Open *****************
  1789 ;; Defined at:
  1790 ;;		line 31 in file "driver.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  1    wreg      void 
  1797 ;; Registers used:
  1798 ;;		None
  1799 ;; Tracked objects:
  1800 ;;		On entry : 100/0
  1801 ;;		On exit  : 100/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1804 ;;      Params:         0       0       0       0
  1805 ;;      Locals:         0       0       0       0
  1806 ;;      Temps:          0       0       0       0
  1807 ;;      Totals:         0       0       0       0
  1808 ;;Total ram usage:        0 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_Sleep_Init
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           ;psect for function _Key_Interrupt_Open
  1818                           
  1819                           
  1820                           ;driver.c: 33: PBIE = 1;
  1821                           ;incstack = 0
  1822                           ; Regs used in _Key_Interrupt_Open: []
  1823  02FF  148E               	bsf	14,1	;volatile
  1824                           
  1825                           ;driver.c: 34: IOCB2 = 1;
  1826  0300  1509               	bsf	9,2	;volatile
  1827  0301  0008               	return
  1828  0302                     __end_of_Key_Interrupt_Open:	
  1829                           
  1830                           	psect	text16
  1831  0302                     __ptext16:	
  1832  0302                     _ChargeDetect_Interrupt_Open:	
  1833 ;; *************** function _ChargeDetect_Interrupt_Open *****************
  1834 ;; Defined at:
  1835 ;;		line 45 in file "driver.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		None
  1844 ;; Tracked objects:
  1845 ;;		On entry : 100/0
  1846 ;;		On exit  : 100/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1849 ;;      Params:         0       0       0       0
  1850 ;;      Locals:         0       0       0       0
  1851 ;;      Temps:          0       0       0       0
  1852 ;;      Totals:         0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    2
  1856 ;; This function calls:
  1857 ;;		Nothing
  1858 ;; This function is called by:
  1859 ;;		_Sleep_Init
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           ;psect for function _ChargeDetect_Interrupt_Open
  1863                           
  1864                           
  1865                           ;driver.c: 50: PBIE = 1;
  1866                           ;incstack = 0
  1867                           ; Regs used in _ChargeDetect_Interrupt_Open: []
  1868  0302  148E               	bsf	14,1	;volatile
  1869                           
  1870                           ;driver.c: 51: IOCB6 = 1;
  1871  0303  1709               	bsf	9,6	;volatile
  1872  0304  0008               	return
  1873  0305                     __end_of_ChargeDetect_Interrupt_Open:	
  1874                           
  1875                           	psect	text17
  1876  02D7                     __ptext17:	
  1877  02D7                     _RGB_Init:	
  1878 ;; *************** function _RGB_Init *****************
  1879 ;; Defined at:
  1880 ;;		line 9 in file "rgb.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		None
  1889 ;; Tracked objects:
  1890 ;;		On entry : 100/0
  1891 ;;		On exit  : 100/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1894 ;;      Params:         0       0       0       0
  1895 ;;      Locals:         0       0       0       0
  1896 ;;      Temps:          0       0       0       0
  1897 ;;      Totals:         0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		Nothing
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           ;psect for function _RGB_Init
  1908                           
  1909                           
  1910                           ;rgb.c: 11: *(unsigned int *)0x46 &= ~(0x08);
  1911                           ;incstack = 0
  1912                           ; Regs used in _RGB_Init: []
  1913  02D7  11C6               	bcf	70,3
  1914                           
  1915                           ;rgb.c: 12: *(unsigned int *)0x0D &= ~(0x08);
  1916  02D8  118D               	bcf	13,3
  1917                           
  1918                           ;rgb.c: 13: *(unsigned int *)0x0B |= (0x08);
  1919  02D9  158B               	bsf	11,3
  1920                           
  1921                           ;rgb.c: 15: ( (*((unsigned int *)0x06)) |= (0x08) );
  1922  02DA  1586               	bsf	6,3
  1923  02DB  0008               	return
  1924  02DC                     __end_of_RGB_Init:	
  1925                           
  1926                           	psect	text18
  1927  030E                     __ptext18:	
  1928  030E                     _Power_Manage:	
  1929 ;; *************** function _Power_Manage *****************
  1930 ;; Defined at:
  1931 ;;		line 7 in file "power.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		status,2, status,0, pclath, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 100/0
  1942 ;;		On exit  : 100/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1945 ;;      Params:         0       0       0       0
  1946 ;;      Locals:         0       0       0       0
  1947 ;;      Temps:          0       0       0       0
  1948 ;;      Totals:         0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    3
  1952 ;; This function calls:
  1953 ;;		_Power_Turn
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           ;psect for function _Power_Manage
  1959                           
  1960                           
  1961                           ;power.c: 9: Power_Turn();
  1962                           ;incstack = 0
  1963                           ; Regs used in _Power_Manage: [status,2+status,0+pclath+cstack]
  1964  030E  2AC1               	ljmp	l7154
  1965  030F                     __end_of_Power_Manage:	
  1966                           
  1967                           	psect	text19
  1968  02C1                     __ptext19:	
  1969  02C1                     _Power_Turn:	
  1970 ;; *************** function _Power_Turn *****************
  1971 ;; Defined at:
  1972 ;;		line 12 in file "power.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		None
  1981 ;; Tracked objects:
  1982 ;;		On entry : 100/0
  1983 ;;		On exit  : 100/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  1986 ;;      Params:         0       0       0       0
  1987 ;;      Locals:         0       0       0       0
  1988 ;;      Temps:          0       0       0       0
  1989 ;;      Totals:         0       0       0       0
  1990 ;;Total ram usage:        0 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    2
  1993 ;; This function calls:
  1994 ;;		Nothing
  1995 ;; This function is called by:
  1996 ;;		_Power_Manage
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           ;psect for function _Power_Turn
  2000                           
  2001  02C1                     l7154:	
  2002                           
  2003                           ;incstack = 0
  2004                           ; Regs used in _Power_Turn: []
  2005                           ;power.c: 14: if(EvePower == 0)
  2006  02C1  1A31               	btfsc	_EvePower/(0+8),_EvePower& (0+7)
  2007  02C2  2AC5               	goto	l4834
  2008                           
  2009                           ;power.c: 15: {
  2010                           ;power.c: 16: PowerStatus = 0;
  2011  02C3  1232               	bcf	_PowerStatus/(0+8),_PowerStatus& (0+7)
  2012                           
  2013                           ;power.c: 17: }
  2014  02C4  0008               	return
  2015  02C5                     l4834:	
  2016                           
  2017                           ;power.c: 18: else
  2018                           ;power.c: 19: {
  2019                           ;power.c: 20: PowerStatus = 1;
  2020  02C5  1632               	bsf	_PowerStatus/(0+8),_PowerStatus& (0+7)
  2021  02C6  0008               	return
  2022  02C7                     __end_of_Power_Turn:	
  2023                           
  2024                           	psect	text20
  2025  0308                     __ptext20:	
  2026  0308                     _Power_Init:	
  2027 ;; *************** function _Power_Init *****************
  2028 ;; Defined at:
  2029 ;;		line 24 in file "power.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		None
  2038 ;; Tracked objects:
  2039 ;;		On entry : 100/0
  2040 ;;		On exit  : 100/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2043 ;;      Params:         0       0       0       0
  2044 ;;      Locals:         0       0       0       0
  2045 ;;      Temps:          0       0       0       0
  2046 ;;      Totals:         0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used:    1
  2049 ;; Hardware stack levels required when called:    2
  2050 ;; This function calls:
  2051 ;;		Nothing
  2052 ;; This function is called by:
  2053 ;;		_main
  2054 ;; This function uses a non-reentrant model
  2055 ;;
  2056                           ;psect for function _Power_Init
  2057                           
  2058                           
  2059                           ;power.c: 26: PowerStatus = 0;
  2060                           ;incstack = 0
  2061                           ; Regs used in _Power_Init: []
  2062  0308  1232               	bcf	_PowerStatus/(0+8),_PowerStatus& (0+7)
  2063  0309  0008               	return
  2064  030A                     __end_of_Power_Init:	
  2065                           
  2066                           	psect	text21
  2067  02F1                     __ptext21:	
  2068  02F1                     _LED_Manage:	
  2069 ;; *************** function _LED_Manage *****************
  2070 ;; Defined at:
  2071 ;;		line 170 in file "led.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      void 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 100/0
  2082 ;;		On exit  : 900/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2085 ;;      Params:         0       0       0       0
  2086 ;;      Locals:         0       0       0       0
  2087 ;;      Temps:          0       0       0       0
  2088 ;;      Totals:         0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used:    1
  2091 ;; Hardware stack levels required when called:    4
  2092 ;; This function calls:
  2093 ;;		_LED_Color
  2094 ;;		_LED_Dim
  2095 ;;		_LED_PWM_Set
  2096 ;;		_LED_Status
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           ;psect for function _LED_Manage
  2102                           
  2103                           
  2104                           ;led.c: 172: LED_Dim();
  2105                           ;incstack = 0
  2106                           ; Regs used in _LED_Manage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2107  02F1  2289               	fcall	_LED_Dim
  2108                           
  2109                           ;led.c: 173: LED_Color();
  2110  02F2  2145               	fcall	_LED_Color
  2111                           
  2112                           ;led.c: 174: LED_Status();
  2113  02F3  2206               	fcall	_LED_Status
  2114                           
  2115                           ;led.c: 175: LED_PWM_Set();
  2116  02F4  2A9E               	ljmp	l7152
  2117  02F5                     __end_of_LED_Manage:	
  2118                           
  2119                           	psect	text22
  2120  0206                     __ptext22:	
  2121  0206                     _LED_Status:	
  2122 ;; *************** function _LED_Status *****************
  2123 ;; Defined at:
  2124 ;;		line 147 in file "led.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;		None
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;  pwm             2    2[BANK0 ] unsigned char [2]
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      void 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2
  2133 ;; Tracked objects:
  2134 ;;		On entry : 900/0
  2135 ;;		On exit  : 900/100
  2136 ;;		Unchanged: 800/0
  2137 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2138 ;;      Params:         0       0       0       0
  2139 ;;      Locals:         0       2       0       0
  2140 ;;      Temps:          0       0       0       0
  2141 ;;      Totals:         0       2       0       0
  2142 ;;Total ram usage:        2 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    2
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_LED_Manage
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           ;psect for function _LED_Status
  2152                           
  2153                           
  2154                           ;led.c: 149: unsigned char pwm[2] = {0};
  2155                           ;incstack = 0
  2156                           ; Regs used in _LED_Status: [wreg+status,2]
  2157  0206  01B5               	clrf	LED_Status@pwm
  2158  0207  01B6               	clrf	LED_Status@pwm+1
  2159                           
  2160                           ;led.c: 151: pwm[0] = LED_ColorPwm[0];
  2161  0208  0812               	movf	_LED_ColorPwm,w
  2162  0209  00B5               	movwf	LED_Status@pwm
  2163                           
  2164                           ;led.c: 152: pwm[1] = LED_ColorPwm[1];
  2165  020A  0813               	movf	_LED_ColorPwm+1,w
  2166  020B  00B6               	movwf	LED_Status@pwm+1
  2167                           
  2168                           ;led.c: 154: if( PowerStatus == 0 )
  2169  020C  1A32               	btfsc	_PowerStatus/(0+8),_PowerStatus& (0+7)
  2170  020D  2A10               	goto	l7148
  2171                           
  2172                           ;led.c: 155: {
  2173                           ;led.c: 156: pwm[ 0 ] = 0;
  2174  020E  01B5               	clrf	LED_Status@pwm
  2175                           
  2176                           ;led.c: 157: pwm[ 1 ] = 0;
  2177  020F  01B6               	clrf	LED_Status@pwm+1
  2178  0210                     l7148:	
  2179                           
  2180                           ;led.c: 158: }
  2181                           ;led.c: 160: LED_PWM[0] = pwm[0];
  2182  0210  0835               	movf	LED_Status@pwm,w
  2183  0211  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0212  00D0               	movwf	_LED_PWM^(0+128)
  2185                           
  2186                           ;led.c: 161: LED_PWM[1] = pwm[1];
  2187  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2188  0214  0836               	movf	LED_Status@pwm+1,w
  2189  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0216  00D1               	movwf	(_LED_PWM^(0+128)+1)
  2191  0217  0008               	return
  2192  0218                     __end_of_LED_Status:	
  2193                           
  2194                           	psect	text23
  2195  029E                     __ptext23:	
  2196  029E                     _LED_PWM_Set:	
  2197 ;; *************** function _LED_PWM_Set *****************
  2198 ;; Defined at:
  2199 ;;		line 164 in file "led.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;		None
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg
  2208 ;; Tracked objects:
  2209 ;;		On entry : 900/100
  2210 ;;		On exit  : 900/0
  2211 ;;		Unchanged: 800/0
  2212 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2213 ;;      Params:         0       0       0       0
  2214 ;;      Locals:         0       0       0       0
  2215 ;;      Temps:          0       0       0       0
  2216 ;;      Totals:         0       0       0       0
  2217 ;;Total ram usage:        0 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    2
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_LED_Manage
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           ;psect for function _LED_PWM_Set
  2227                           
  2228  029E                     l7152:	
  2229                           
  2230                           ;incstack = 0
  2231                           ; Regs used in _LED_PWM_Set: [wreg]
  2232                           ;led.c: 166: PWM1P = LED_PWM[0];
  2233  029E  0850               	movf	_LED_PWM^(0+128),w
  2234  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2235  02A0  00D4               	movwf	84	;volatile
  2236                           
  2237                           ;led.c: 167: PWM0P = LED_PWM[1];
  2238  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2239  02A2  0851               	movf	(_LED_PWM^(0+128)+1),w
  2240  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  2241  02A4  00CF               	movwf	79	;volatile
  2242  02A5  0008               	return
  2243  02A6                     __end_of_LED_PWM_Set:	
  2244                           
  2245                           	psect	text24
  2246  0289                     __ptext24:	
  2247  0289                     _LED_Dim:	
  2248 ;; *************** function _LED_Dim *****************
  2249 ;; Defined at:
  2250 ;;		line 66 in file "led.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : 100/0
  2261 ;;		On exit  : 900/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2264 ;;      Params:         0       0       0       0
  2265 ;;      Locals:         0       0       0       0
  2266 ;;      Temps:          0       0       0       0
  2267 ;;      Totals:         0       0       0       0
  2268 ;;Total ram usage:        0 bytes
  2269 ;; Hardware stack levels used:    1
  2270 ;; Hardware stack levels required when called:    3
  2271 ;; This function calls:
  2272 ;;		_LED_DimIndex_Ctrl
  2273 ;; This function is called by:
  2274 ;;		_LED_Manage
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           ;psect for function _LED_Dim
  2278                           
  2279                           
  2280                           ;led.c: 68: LED_DimIndex_Ctrl();
  2281                           ;incstack = 0
  2282                           ; Regs used in _LED_Dim: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2283  0289  224D               	fcall	_LED_DimIndex_Ctrl
  2284                           
  2285                           ;led.c: 70: LED_DimPwm[ 0 ] = LED_W_DimArray[ LED_W_DimIndex ];
  2286  028A  081B               	movf	_LED_W_DimIndex,w
  2287  028B  3EC7               	addlw	(low (_LED_W_DimArray| 0))& (0+255)
  2288  028C  0084               	movwf	4
  2289  028D  0800               	movf	0,w
  2290  028E  0090               	movwf	_LED_DimPwm
  2291                           
  2292                           ;led.c: 71: LED_DimPwm[ 1 ] = LED_Y_DimArray[ LED_Y_DimIndex ];
  2293  028F  081A               	movf	_LED_Y_DimIndex,w
  2294  0290  3EC0               	addlw	(low (_LED_Y_DimArray| 0))& (0+255)
  2295  0291  0084               	movwf	4
  2296  0292  0800               	movf	0,w
  2297  0293  0091               	movwf	_LED_DimPwm+1
  2298  0294  0008               	return
  2299  0295                     __end_of_LED_Dim:	
  2300                           
  2301                           	psect	text25
  2302  024D                     __ptext25:	
  2303  024D                     _LED_DimIndex_Ctrl:	
  2304 ;; *************** function _LED_DimIndex_Ctrl *****************
  2305 ;; Defined at:
  2306 ;;		line 74 in file "led.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 100/0
  2317 ;;		On exit  : 100/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2320 ;;      Params:         0       0       0       0
  2321 ;;      Locals:         0       0       0       0
  2322 ;;      Temps:          0       0       0       0
  2323 ;;      Totals:         0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    2
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_LED_Dim
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           ;psect for function _LED_DimIndex_Ctrl
  2334                           
  2335                           
  2336                           ;led.c: 76: if(!EveDim)
  2337                           ;incstack = 0
  2338                           ; Regs used in _LED_DimIndex_Ctrl: [wreg+status,2+status,0]
  2339  024D  1DB1               	btfss	_EveDim/(0+8),_EveDim& (0+7)
  2340  024E  0008               	return
  2341                           
  2342                           ;led.c: 79: }
  2343                           ;led.c: 80: EveDim = 0;
  2344  024F  11B1               	bcf	_EveDim/(0+8),_EveDim& (0+7)
  2345                           
  2346                           ;led.c: 82: if(LedColor == 0)
  2347  0250  081C               	movf	_LedColor,w
  2348  0251  3007               	movlw	7
  2349  0252  1D03               	btfss	3,2
  2350  0253  2A59               	goto	L1
  2351                           
  2352                           ;led.c: 83: {
  2353                           ;led.c: 84: LED_W_DimIndex++;
  2354  0254  0A9B               	incf	_LED_W_DimIndex,f
  2355                           
  2356                           ;led.c: 85: if(LED_W_DimIndex > 6)
  2357  0255  021B               	subwf	_LED_W_DimIndex,w
  2358  0256  1803               	btfsc	3,0
  2359                           
  2360                           ;led.c: 86: {
  2361                           ;led.c: 87: LED_W_DimIndex = 0;
  2362  0257  019B               	clrf	_LED_W_DimIndex
  2363  0258  0008               	return
  2364  0259                     L1:	
  2365                           
  2366                           ;led.c: 90: else
  2367                           ;led.c: 91: {
  2368                           ;led.c: 92: LED_Y_DimIndex++;
  2369  0259  0A9A               	incf	_LED_Y_DimIndex,f
  2370                           
  2371                           ;led.c: 93: if(LED_Y_DimIndex > 6)
  2372  025A  021A               	subwf	_LED_Y_DimIndex,w
  2373  025B  1803               	btfsc	3,0
  2374                           
  2375                           ;led.c: 94: {
  2376                           ;led.c: 95: LED_Y_DimIndex = 0;
  2377  025C  019A               	clrf	_LED_Y_DimIndex
  2378  025D  0008               	return
  2379  025E                     __end_of_LED_DimIndex_Ctrl:	
  2380                           
  2381                           	psect	text26
  2382  0145                     __ptext26:	
  2383  0145                     _LED_Color:	
  2384 ;; *************** function _LED_Color *****************
  2385 ;; Defined at:
  2386 ;;		line 105 in file "led.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;		None
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  index           1    2[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 900/0
  2397 ;;		On exit  : 900/0
  2398 ;;		Unchanged: 800/0
  2399 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2400 ;;      Params:         0       0       0       0
  2401 ;;      Locals:         0       1       0       0
  2402 ;;      Temps:          0       0       0       0
  2403 ;;      Totals:         0       1       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; Hardware stack levels required when called:    2
  2407 ;; This function calls:
  2408 ;;		Nothing
  2409 ;; This function is called by:
  2410 ;;		_LED_Manage
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           ;psect for function _LED_Color
  2414                           
  2415                           
  2416                           ;led.c: 108: if(EveColor)
  2417                           ;incstack = 0
  2418                           ; Regs used in _LED_Color: [wreg-fsr0h+status,2+status,0]
  2419  0145  1D31               	btfss	_EveColor/(0+8),_EveColor& (0+7)
  2420  0146  2949               	goto	l3877
  2421                           
  2422                           ;led.c: 109: {
  2423                           ;led.c: 111: LedColor = 0;
  2424  0147  019C               	clrf	_LedColor
  2425                           
  2426                           ;led.c: 112: }
  2427  0148  294B               	goto	l7122
  2428  0149                     l3877:	
  2429                           
  2430                           ;led.c: 115: else
  2431                           ;led.c: 116: {
  2432                           ;led.c: 118: LedColor = 1;
  2433  0149  019C               	clrf	_LedColor
  2434  014A  0A9C               	incf	_LedColor,f
  2435  014B                     l7122:	
  2436                           
  2437                           ;led.c: 119: }
  2438                           ;led.c: 120: index = LedColor;
  2439  014B  081C               	movf	_LedColor,w
  2440  014C  00B5               	movwf	LED_Color@index
  2441                           
  2442                           ;led.c: 122: switch(index)
  2443  014D  295B               	goto	l7136
  2444  014E                     l7124:	
  2445                           
  2446                           ;led.c: 125: {
  2447                           ;led.c: 126: LED_ColorPwm[0] = 0;
  2448  014E  0192               	clrf	_LED_ColorPwm
  2449                           
  2450                           ;led.c: 127: LED_ColorPwm[1] = LED_DimPwm[ 1 ];
  2451  014F  0811               	movf	_LED_DimPwm+1,w
  2452  0150  0093               	movwf	_LED_ColorPwm+1
  2453                           
  2454                           ;led.c: 128: }
  2455                           ;led.c: 129: break;
  2456  0151  0008               	return
  2457  0152                     l7128:	
  2458                           
  2459                           ;led.c: 132: {
  2460                           ;led.c: 133: LED_ColorPwm[1] = 0;
  2461  0152  0193               	clrf	_LED_ColorPwm+1
  2462                           
  2463                           ;led.c: 134: LED_ColorPwm[0] = LED_DimPwm[ 0 ];
  2464  0153  0810               	movf	_LED_DimPwm,w
  2465  0154  0092               	movwf	_LED_ColorPwm
  2466                           
  2467                           ;led.c: 135: }
  2468                           ;led.c: 136: break;
  2469  0155  0008               	return
  2470  0156                     l7132:	
  2471                           
  2472                           ;led.c: 139: LED_ColorPwm[ 0 ] = LED_DimPwm[ 0 ];
  2473  0156  0810               	movf	_LED_DimPwm,w
  2474  0157  0092               	movwf	_LED_ColorPwm
  2475                           
  2476                           ;led.c: 140: LED_ColorPwm[ 1 ] = LED_DimPwm[ 1 ];
  2477  0158  0811               	movf	_LED_DimPwm+1,w
  2478  0159  0093               	movwf	_LED_ColorPwm+1
  2479                           
  2480                           ;led.c: 141: break;
  2481  015A  0008               	return
  2482  015B                     l7136:	
  2483  015B  0835               	movf	LED_Color@index,w
  2484                           
  2485                           ; Switch size 1, requested type "space"
  2486                           ; Number of cases is 2, Range of values is 0 to 1
  2487                           ; switch strategies available:
  2488                           ; Name         Instructions Cycles
  2489                           ; simple_byte            7     4 (average)
  2490                           ; direct_byte            8     6 (fixed)
  2491                           ; jumptable            260     6 (fixed)
  2492                           ;	Chosen strategy is simple_byte
  2493  015C  3A00               	xorlw	0	; case 0
  2494  015D  1903               	btfsc	3,2
  2495  015E  2952               	goto	l7128
  2496  015F  3A01               	xorlw	1	; case 1
  2497  0160  1903               	btfsc	3,2
  2498  0161  294E               	goto	l7124
  2499  0162  2956               	goto	l7132
  2500  0163                     __end_of_LED_Color:	
  2501                           
  2502                           	psect	text27
  2503  030A                     __ptext27:	
  2504  030A                     _Eve_Manage:	
  2505 ;; *************** function _Eve_Manage *****************
  2506 ;; Defined at:
  2507 ;;		line 11 in file "eve.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 100/0
  2518 ;;		On exit  : 100/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2521 ;;      Params:         0       0       0       0
  2522 ;;      Locals:         0       0       0       0
  2523 ;;      Temps:          0       0       0       0
  2524 ;;      Totals:         0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    4
  2528 ;; This function calls:
  2529 ;;		_Eve_Detect
  2530 ;;		_Key_Detect
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           ;psect for function _Eve_Manage
  2536                           
  2537                           
  2538                           ;eve.c: 14: Key_Detect();
  2539                           ;incstack = 0
  2540                           ; Regs used in _Eve_Manage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2541  030A  21DD               	fcall	_Key_Detect
  2542                           
  2543                           ;eve.c: 16: Eve_Detect();
  2544  030B  28FA               	ljmp	l7084
  2545  030C                     __end_of_Eve_Manage:	
  2546                           
  2547                           	psect	text28
  2548  01DD                     __ptext28:	
  2549  01DD                     _Key_Detect:	
  2550 ;; *************** function _Key_Detect *****************
  2551 ;; Defined at:
  2552 ;;		line 90 in file "key.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 100/0
  2563 ;;		On exit  : 100/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2566 ;;      Params:         0       0       0       0
  2567 ;;      Locals:         0       0       0       0
  2568 ;;      Temps:          0       0       0       0
  2569 ;;      Totals:         0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    3
  2573 ;; This function calls:
  2574 ;;		_Read_Key
  2575 ;; This function is called by:
  2576 ;;		_Eve_Manage
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           ;psect for function _Key_Detect
  2580                           
  2581                           
  2582                           ;key.c: 92: static unsigned int sys_time = 0;
  2583                           ;key.c: 94: if( !KeyTick )
  2584                           ;incstack = 0
  2585                           ; Regs used in _Key_Detect: [wreg+status,2+status,0+pclath+cstack]
  2586  01DD  081F               	movf	_KeyTick,w
  2587  01DE  1903               	btfsc	3,2
  2588  01DF  0008               	return
  2589                           
  2590                           ;key.c: 96: KeyTick = 0;
  2591  01E0  019F               	clrf	_KeyTick
  2592                           
  2593                           ;key.c: 99: sys_time++;
  2594  01E1  0A94               	incf	Key_Detect@sys_time,f
  2595  01E2  1903               	btfsc	3,2
  2596  01E3  0A95               	incf	Key_Detect@sys_time+1,f
  2597                           
  2598                           ;key.c: 100: if(sys_time > 65000)
  2599  01E4  30FD               	movlw	253
  2600  01E5  0215               	subwf	Key_Detect@sys_time+1,w
  2601  01E6  30E9               	movlw	233
  2602  01E7  1903               	btfsc	3,2
  2603  01E8  0214               	subwf	Key_Detect@sys_time,w
  2604  01E9  1C03               	btfss	3,0
  2605  01EA  29ED               	goto	l7378
  2606                           
  2607                           ;key.c: 101: sys_time = 0;
  2608  01EB  0194               	clrf	Key_Detect@sys_time
  2609  01EC  0195               	clrf	Key_Detect@sys_time+1
  2610  01ED                     l7378:	
  2611                           
  2612                           ;key.c: 103: Read_Key(sys_time);
  2613  01ED  0815               	movf	Key_Detect@sys_time+1,w
  2614  01EE  00B6               	movwf	Read_Key@sys_time+1
  2615  01EF  0814               	movf	Key_Detect@sys_time,w
  2616  01F0  00B5               	movwf	Read_Key@sys_time
  2617  01F1  2818               	ljmp	l6830
  2618  01F2                     __end_of_Key_Detect:	
  2619                           
  2620                           	psect	text29
  2621  0018                     __ptext29:	
  2622  0018                     _Read_Key:	
  2623 ;; *************** function _Read_Key *****************
  2624 ;; Defined at:
  2625 ;;		line 106 in file "key.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  sys_time        2    2[BANK0 ] unsigned int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  interval        2    4[BANK0 ] unsigned int 
  2630 ;;  interval        2    6[BANK0 ] unsigned int 
  2631 ;; Return value:  Size  Location     Type
  2632 ;;                  1    wreg      void 
  2633 ;; Registers used:
  2634 ;;		wreg, status,2, status,0
  2635 ;; Tracked objects:
  2636 ;;		On entry : 100/0
  2637 ;;		On exit  : 100/0
  2638 ;;		Unchanged: 0/0
  2639 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2640 ;;      Params:         0       2       0       0
  2641 ;;      Locals:         0       4       0       0
  2642 ;;      Temps:          0       0       0       0
  2643 ;;      Totals:         0       6       0       0
  2644 ;;Total ram usage:        6 bytes
  2645 ;; Hardware stack levels used:    1
  2646 ;; Hardware stack levels required when called:    2
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		_Key_Detect
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           ;psect for function _Read_Key
  2654                           
  2655  0018                     l6830:	
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _Read_Key: [wreg+status,2+status,0]
  2659                           ;key.c: 108: if(!( (*((unsigned int *)0x06)) & (0x04) ))
  2660  0018  1906               	btfsc	6,2
  2661  0019  2833               	goto	l6844
  2662                           
  2663                           ;key.c: 109: {
  2664                           ;key.c: 110: if(KeyPressTime < 2001)
  2665  001A  3007               	movlw	7
  2666  001B  0219               	subwf	_KeyPressTime+1,w
  2667  001C  30D1               	movlw	209
  2668  001D  1903               	btfsc	3,2
  2669  001E  0218               	subwf	_KeyPressTime,w
  2670  001F  1803               	btfsc	3,0
  2671  0020  2824               	goto	l6836
  2672                           
  2673                           ;key.c: 111: {
  2674                           ;key.c: 112: KeyPressTime++;
  2675  0021  0A98               	incf	_KeyPressTime,f
  2676  0022  1903               	btfsc	3,2
  2677  0023  0A99               	incf	_KeyPressTime+1,f
  2678  0024                     l6836:	
  2679                           
  2680                           ;key.c: 113: }
  2681                           ;key.c: 114: if(KeyPressTime == 2000)
  2682  0024  30D0               	movlw	208
  2683  0025  0618               	xorwf	_KeyPressTime,w
  2684  0026  3007               	movlw	7
  2685  0027  1903               	btfsc	3,2
  2686  0028  0619               	xorwf	_KeyPressTime+1,w
  2687  0029  1D03               	btfss	3,2
  2688  002A  0008               	return
  2689                           
  2690                           ;key.c: 115: {
  2691                           ;key.c: 116: KeyPressTime = 0;
  2692  002B  0198               	clrf	_KeyPressTime
  2693  002C  0199               	clrf	_KeyPressTime+1
  2694                           
  2695                           ;key.c: 117: KeyLongPressFlag = 1;
  2696  002D  1731               	bsf	_KeyLongPressFlag/(0+8),_KeyLongPressFlag& (0+7)
  2697                           
  2698                           ;key.c: 118: LastLongKeyFlag = 1;
  2699  002E  14B1               	bsf	_LastLongKeyFlag/(0+8),_LastLongKeyFlag& (0+7)
  2700                           
  2701                           ;key.c: 120: ShortPressCount = 0;
  2702  002F  019D               	clrf	_ShortPressCount
  2703                           
  2704                           ;key.c: 121: LastShortPressTime = 0;
  2705  0030  0196               	clrf	_LastShortPressTime
  2706  0031  0197               	clrf	_LastShortPressTime+1
  2707  0032  0008               	return
  2708  0033                     l6844:	
  2709                           
  2710                           ;key.c: 124: else
  2711                           ;key.c: 125: {
  2712                           ;key.c: 126: if(KeyPressTime > 10 && KeyPressTime < 900)
  2713  0033  3000               	movlw	0
  2714  0034  0219               	subwf	_KeyPressTime+1,w
  2715  0035  300B               	movlw	11
  2716  0036  1903               	btfsc	3,2
  2717  0037  0218               	subwf	_KeyPressTime,w
  2718  0038  3003               	movlw	3
  2719  0039  1C03               	btfss	3,0
  2720  003A  2864               	goto	L2
  2721  003B  0219               	subwf	_KeyPressTime+1,w
  2722  003C  3084               	movlw	132
  2723  003D  1903               	btfsc	3,2
  2724  003E  0218               	subwf	_KeyPressTime,w
  2725  003F  1803               	btfsc	3,0
  2726  0040  2863               	goto	l6866
  2727                           
  2728                           ;key.c: 127: {
  2729                           ;key.c: 128: if( !LastLongKeyFlag )
  2730  0041  18B1               	btfsc	_LastLongKeyFlag/(0+8),_LastLongKeyFlag& (0+7)
  2731  0042  2887               	goto	l3389
  2732                           
  2733                           ;key.c: 129: {
  2734                           ;key.c: 130: KeyShortPressFlag = 1;
  2735  0043  17B1               	bsf	_KeyShortPressFlag/(0+8),_KeyShortPressFlag& (0+7)
  2736                           
  2737                           ;key.c: 133: if(ShortPressCount == 0)
  2738  0044  081D               	movf	_ShortPressCount,w
  2739  0045  1D03               	btfss	3,2
  2740  0046  284E               	goto	l6858
  2741                           
  2742                           ;key.c: 134: {
  2743                           ;key.c: 136: ShortPressCount = 1;
  2744  0047  019D               	clrf	_ShortPressCount
  2745  0048  0A9D               	incf	_ShortPressCount,f
  2746                           
  2747                           ;key.c: 137: LastShortPressTime = sys_time;
  2748  0049  0836               	movf	Read_Key@sys_time+1,w
  2749  004A  0097               	movwf	_LastShortPressTime+1
  2750  004B  0835               	movf	Read_Key@sys_time,w
  2751  004C  0096               	movwf	_LastShortPressTime
  2752                           
  2753                           ;key.c: 138: }
  2754  004D  2887               	goto	l3389
  2755  004E                     l6858:	
  2756                           
  2757                           ;key.c: 139: else if(ShortPressCount == 1)
  2758  004E  0B1D               	decfsz	_ShortPressCount,w
  2759  004F  2887               	goto	l3389
  2760                           
  2761                           ;key.c: 140: {
  2762                           ;key.c: 142: unsigned int interval = sys_time - LastShortPressTime;
  2763  0050  0836               	movf	Read_Key@sys_time+1,w
  2764  0051  00B8               	movwf	Read_Key@interval+1
  2765  0052  0835               	movf	Read_Key@sys_time,w
  2766  0053  00B7               	movwf	Read_Key@interval
  2767  0054  0816               	movf	_LastShortPressTime,w
  2768  0055  02B7               	subwf	Read_Key@interval,f
  2769  0056  0817               	movf	_LastShortPressTime+1,w
  2770  0057  1C03               	btfss	3,0
  2771  0058  03B8               	decf	Read_Key@interval+1,f
  2772  0059  02B8               	subwf	Read_Key@interval+1,f
  2773                           
  2774                           ;key.c: 143: if(interval < 300)
  2775  005A  3001               	movlw	1
  2776  005B  0238               	subwf	Read_Key@interval+1,w
  2777  005C  302C               	movlw	44
  2778  005D  1903               	btfsc	3,2
  2779  005E  0237               	subwf	Read_Key@interval,w
  2780  005F  1803               	btfsc	3,0
  2781  0060  2884               	goto	l6864
  2782                           
  2783                           ;key.c: 144: {
  2784                           ;key.c: 146: KeyShortPressTwiceFlag = 1;
  2785  0061  16B1               	bsf	_KeyShortPressTwiceFlag/(0+8),_KeyShortPressTwiceFlag& (0+7)
  2786  0062  2884               	goto	l6864
  2787  0063                     l6866:	
  2788                           
  2789                           ;key.c: 154: else if(KeyPressTime >= 900 && KeyPressTime < 2000)
  2790  0063  3003               	movlw	3
  2791  0064                     L2:	
  2792  0064  0219               	subwf	_KeyPressTime+1,w
  2793  0065  3084               	movlw	132
  2794  0066  1903               	btfsc	3,2
  2795  0067  0218               	subwf	_KeyPressTime,w
  2796  0068  1C03               	btfss	3,0
  2797  0069  2871               	goto	l6872
  2798  006A  3007               	movlw	7
  2799  006B  0219               	subwf	_KeyPressTime+1,w
  2800  006C  30D0               	movlw	208
  2801  006D  1903               	btfsc	3,2
  2802  006E  0218               	subwf	_KeyPressTime,w
  2803  006F  1C03               	btfss	3,0
  2804  0070  2884               	goto	l6864
  2805  0071                     l6872:	
  2806                           
  2807                           ;key.c: 161: else if(ShortPressCount == 1)
  2808  0071  0B1D               	decfsz	_ShortPressCount,w
  2809  0072  2887               	goto	l3389
  2810                           
  2811                           ;key.c: 162: {
  2812                           ;key.c: 163: unsigned int interval = sys_time - LastShortPressTime;
  2813  0073  0836               	movf	Read_Key@sys_time+1,w
  2814  0074  00BA               	movwf	Read_Key@interval_1713+1
  2815  0075  0835               	movf	Read_Key@sys_time,w
  2816  0076  00B9               	movwf	Read_Key@interval_1713
  2817  0077  0816               	movf	_LastShortPressTime,w
  2818  0078  02B9               	subwf	Read_Key@interval_1713,f
  2819  0079  0817               	movf	_LastShortPressTime+1,w
  2820  007A  1C03               	btfss	3,0
  2821  007B  03BA               	decf	Read_Key@interval_1713+1,f
  2822  007C  02BA               	subwf	Read_Key@interval_1713+1,f
  2823                           
  2824                           ;key.c: 164: if(interval >= 300)
  2825  007D  3001               	movlw	1
  2826  007E  023A               	subwf	Read_Key@interval_1713+1,w
  2827  007F  302C               	movlw	44
  2828  0080  1903               	btfsc	3,2
  2829  0081  0239               	subwf	Read_Key@interval_1713,w
  2830  0082  1C03               	btfss	3,0
  2831  0083  2887               	goto	l3389
  2832  0084                     l6864:	
  2833                           
  2834                           ;key.c: 147: }
  2835                           ;key.c: 149: ShortPressCount = 0;
  2836  0084  019D               	clrf	_ShortPressCount
  2837                           
  2838                           ;key.c: 150: LastShortPressTime = 0;
  2839  0085  0196               	clrf	_LastShortPressTime
  2840  0086  0197               	clrf	_LastShortPressTime+1
  2841  0087                     l3389:	
  2842                           
  2843                           ;key.c: 169: }
  2844                           ;key.c: 170: }
  2845                           ;key.c: 172: KeyPressTime = 0;
  2846  0087  0198               	clrf	_KeyPressTime
  2847  0088  0199               	clrf	_KeyPressTime+1
  2848                           
  2849                           ;key.c: 173: LastLongKeyFlag = 0;
  2850  0089  10B1               	bcf	_LastLongKeyFlag/(0+8),_LastLongKeyFlag& (0+7)
  2851  008A  0008               	return
  2852  008B                     __end_of_Read_Key:	
  2853                           
  2854                           	psect	text30
  2855  00FA                     __ptext30:	
  2856  00FA                     _Eve_Detect:	
  2857 ;; *************** function _Eve_Detect *****************
  2858 ;; Defined at:
  2859 ;;		line 19 in file "eve.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2868 ;; Tracked objects:
  2869 ;;		On entry : 100/0
  2870 ;;		On exit  : 100/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  2873 ;;      Params:         0       0       0       0
  2874 ;;      Locals:         0       0       0       0
  2875 ;;      Temps:          0       0       0       0
  2876 ;;      Totals:         0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used:    1
  2879 ;; Hardware stack levels required when called:    2
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_Eve_Manage
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           ;psect for function _Eve_Detect
  2887                           
  2888  00FA                     l7084:	
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _Eve_Detect: [wreg-fsr0h+status,2+status,0]
  2892                           ;eve.c: 21: if(PowerStatus == 1)
  2893  00FA  1A32               	btfsc	_PowerStatus/(0+8),_PowerStatus& (0+7)
  2894  00FB  290A               	goto	l7096
  2895  00FC  291A               	goto	l7102
  2896  00FD                     l1981:	
  2897                           
  2898                           ;eve.c: 24: {
  2899                           ;eve.c: 25: case 0:
  2900                           ;eve.c: 26: if(KeyShortPressFlag)
  2901  00FD  1FB1               	btfss	_KeyShortPressFlag/(0+8),_KeyShortPressFlag& (0+7)
  2902  00FE  2911               	goto	l1983
  2903                           
  2904                           ;eve.c: 27: {
  2905                           ;eve.c: 28: KeyShortPressFlag = 0;
  2906  00FF  13B1               	bcf	_KeyShortPressFlag/(0+8),_KeyShortPressFlag& (0+7)
  2907                           
  2908                           ;eve.c: 29: EveColor = 1;
  2909  0100  1531               	bsf	_EveColor/(0+8),_EveColor& (0+7)
  2910                           
  2911                           ;eve.c: 30: ShortIndex = 1;
  2912  0101  01A0               	clrf	_ShortIndex
  2913  0102  0AA0               	incf	_ShortIndex,f
  2914  0103  2911               	goto	l1983
  2915  0104                     l1984:	
  2916                           
  2917                           ;eve.c: 34: case 1:
  2918                           ;eve.c: 35: if(KeyShortPressFlag)
  2919  0104  1FB1               	btfss	_KeyShortPressFlag/(0+8),_KeyShortPressFlag& (0+7)
  2920  0105  2911               	goto	l1983
  2921                           
  2922                           ;eve.c: 36: {
  2923                           ;eve.c: 37: KeyShortPressFlag = 0;
  2924  0106  13B1               	bcf	_KeyShortPressFlag/(0+8),_KeyShortPressFlag& (0+7)
  2925                           
  2926                           ;eve.c: 38: EveColor = 0;
  2927  0107  1131               	bcf	_EveColor/(0+8),_EveColor& (0+7)
  2928                           
  2929                           ;eve.c: 39: ShortIndex = 0;
  2930  0108  01A0               	clrf	_ShortIndex
  2931  0109  2911               	goto	l1983
  2932  010A                     l7096:	
  2933  010A  0820               	movf	_ShortIndex,w
  2934                           
  2935                           ; Switch size 1, requested type "space"
  2936                           ; Number of cases is 2, Range of values is 0 to 1
  2937                           ; switch strategies available:
  2938                           ; Name         Instructions Cycles
  2939                           ; simple_byte            7     4 (average)
  2940                           ; direct_byte            8     6 (fixed)
  2941                           ; jumptable            260     6 (fixed)
  2942                           ;	Chosen strategy is simple_byte
  2943  010B  3A00               	xorlw	0	; case 0
  2944  010C  1903               	btfsc	3,2
  2945  010D  28FD               	goto	l1981
  2946  010E  3A01               	xorlw	1	; case 1
  2947  010F  1903               	btfsc	3,2
  2948  0110  2904               	goto	l1984
  2949  0111                     l1983:	
  2950                           
  2951                           ;eve.c: 51: if( KeyLongPressFlag )
  2952  0111  1F31               	btfss	_KeyLongPressFlag/(0+8),_KeyLongPressFlag& (0+7)
  2953  0112  2915               	goto	l1987
  2954                           
  2955                           ;eve.c: 52: {
  2956                           ;eve.c: 53: KeyLongPressFlag = 0;
  2957  0113  1331               	bcf	_KeyLongPressFlag/(0+8),_KeyLongPressFlag& (0+7)
  2958                           
  2959                           ;eve.c: 55: EveDim = 1;
  2960  0114  15B1               	bsf	_EveDim/(0+8),_EveDim& (0+7)
  2961  0115                     l1987:	
  2962                           
  2963                           ;eve.c: 56: }
  2964                           ;eve.c: 58: if(KeyShortPressTwiceFlag)
  2965  0115  1EB1               	btfss	_KeyShortPressTwiceFlag/(0+8),_KeyShortPressTwiceFlag& (0+7)
  2966  0116  0008               	return
  2967                           
  2968                           ;eve.c: 59: {
  2969                           ;eve.c: 60: KeyShortPressTwiceFlag = 0;
  2970  0117  12B1               	bcf	_KeyShortPressTwiceFlag/(0+8),_KeyShortPressTwiceFlag& (0+7)
  2971                           
  2972                           ;eve.c: 61: EvePower = 0;
  2973  0118  1231               	bcf	_EvePower/(0+8),_EvePower& (0+7)
  2974  0119  0008               	return
  2975  011A                     l7102:	
  2976                           
  2977                           ;eve.c: 64: else
  2978                           ;eve.c: 65: {
  2979                           ;eve.c: 66: ShortIndex = 0;
  2980  011A  01A0               	clrf	_ShortIndex
  2981                           
  2982                           ;eve.c: 67: KeyLongPressFlag = 0;
  2983  011B  1331               	bcf	_KeyLongPressFlag/(0+8),_KeyLongPressFlag& (0+7)
  2984                           
  2985                           ;eve.c: 72: if( KeyShortPressTwiceFlag )
  2986  011C  1EB1               	btfss	_KeyShortPressTwiceFlag/(0+8),_KeyShortPressTwiceFlag& (0+7)
  2987  011D  0008               	return
  2988                           
  2989                           ;eve.c: 73: {
  2990                           ;eve.c: 74: KeyShortPressTwiceFlag = 0;
  2991  011E  12B1               	bcf	_KeyShortPressTwiceFlag/(0+8),_KeyShortPressTwiceFlag& (0+7)
  2992                           
  2993                           ;eve.c: 75: EveColor = 0;
  2994  011F  1131               	bcf	_EveColor/(0+8),_EveColor& (0+7)
  2995                           
  2996                           ;eve.c: 77: KeyShortPressFlag = 0;
  2997  0120  13B1               	bcf	_KeyShortPressFlag/(0+8),_KeyShortPressFlag& (0+7)
  2998                           
  2999                           ;eve.c: 79: EvePower = 1;
  3000  0121  1631               	bsf	_EvePower/(0+8),_EvePower& (0+7)
  3001  0122  0008               	return
  3002  0123                     __end_of_Eve_Detect:	
  3003                           
  3004                           	psect	text31
  3005  030F                     __ptext31:	
  3006  030F                     _Charge_Manage:	
  3007 ;; *************** function _Charge_Manage *****************
  3008 ;; Defined at:
  3009 ;;		line 45 in file "charge.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;		None
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;		None
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  1    wreg      void 
  3016 ;; Registers used:
  3017 ;;		wreg, status,2, status,0, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 900/0
  3020 ;;		On exit  : 900/0
  3021 ;;		Unchanged: 800/0
  3022 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3023 ;;      Params:         0       0       0       0
  3024 ;;      Locals:         0       0       0       0
  3025 ;;      Temps:          0       0       0       0
  3026 ;;      Totals:         0       0       0       0
  3027 ;;Total ram usage:        0 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    3
  3030 ;; This function calls:
  3031 ;;		_Charge_Detect
  3032 ;; This function is called by:
  3033 ;;		_main
  3034 ;; This function uses a non-reentrant model
  3035 ;;
  3036                           ;psect for function _Charge_Manage
  3037                           
  3038                           
  3039                           ;charge.c: 47: Charge_Detect();
  3040                           ;incstack = 0
  3041                           ; Regs used in _Charge_Manage: [wreg+status,2+status,0+pclath+cstack]
  3042  030F  2997               	ljmp	l7042
  3043  0310                     __end_of_Charge_Manage:	
  3044                           
  3045                           	psect	text32
  3046  0197                     __ptext32:	
  3047  0197                     _Charge_Detect:	
  3048 ;; *************** function _Charge_Detect *****************
  3049 ;; Defined at:
  3050 ;;		line 53 in file "charge.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;		None
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, status,2, status,0
  3059 ;; Tracked objects:
  3060 ;;		On entry : 900/0
  3061 ;;		On exit  : 900/0
  3062 ;;		Unchanged: 800/0
  3063 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3064 ;;      Params:         0       0       0       0
  3065 ;;      Locals:         0       0       0       0
  3066 ;;      Temps:          0       0       0       0
  3067 ;;      Totals:         0       0       0       0
  3068 ;;Total ram usage:        0 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    2
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_Charge_Manage
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           ;psect for function _Charge_Detect
  3078                           
  3079  0197                     l7042:	
  3080                           
  3081                           ;incstack = 0
  3082                           ; Regs used in _Charge_Detect: [wreg+status,2+status,0]
  3083                           ;charge.c: 55: if(ChargeDetectTick < 20)
  3084  0197  3014               	movlw	20
  3085  0198  0221               	subwf	_ChargeDetectTick,w
  3086  0199  1C03               	btfss	3,0
  3087  019A  0008               	return
  3088                           
  3089                           ;charge.c: 58: }
  3090                           ;charge.c: 59: ChargeDetectTick = 0;
  3091  019B  01A1               	clrf	_ChargeDetectTick
  3092                           
  3093                           ;charge.c: 61: if(( (*((unsigned int *)0x06)) & (0x40) ))
  3094  019C  1F06               	btfss	6,6
  3095  019D  29A7               	goto	l7060
  3096  019E  3015               	movlw	21
  3097                           
  3098                           ;charge.c: 62: {
  3099                           ;charge.c: 63: Cnt1++;
  3100  019F  0AA3               	incf	_Cnt1,f
  3101                           
  3102                           ;charge.c: 64: Cnt2 = 0;
  3103  01A0  01A2               	clrf	_Cnt2
  3104                           
  3105                           ;charge.c: 65: if(Cnt1 > 20)
  3106  01A1  0223               	subwf	_Cnt1,w
  3107  01A2  1C03               	btfss	3,0
  3108  01A3  0008               	return
  3109                           
  3110                           ;charge.c: 66: {
  3111                           ;charge.c: 67: Cnt1 = 0;
  3112  01A4  01A3               	clrf	_Cnt1
  3113                           
  3114                           ;charge.c: 68: ChargeStatus = 1;
  3115  01A5  15B2               	bsf	_ChargeStatus/(0+8),_ChargeStatus& (0+7)
  3116  01A6  0008               	return
  3117  01A7                     l7060:	
  3118  01A7  3015               	movlw	21
  3119                           
  3120                           ;charge.c: 71: else
  3121                           ;charge.c: 72: {
  3122                           ;charge.c: 73: Cnt2++;
  3123  01A8  0AA2               	incf	_Cnt2,f
  3124                           
  3125                           ;charge.c: 74: Cnt1 = 0;
  3126  01A9  01A3               	clrf	_Cnt1
  3127                           
  3128                           ;charge.c: 75: if(Cnt2 > 20)
  3129  01AA  0222               	subwf	_Cnt2,w
  3130  01AB  1C03               	btfss	3,0
  3131  01AC  0008               	return
  3132                           
  3133                           ;charge.c: 76: {
  3134                           ;charge.c: 77: Cnt2 = 0;
  3135  01AD  01A2               	clrf	_Cnt2
  3136                           
  3137                           ;charge.c: 78: ChargeStatus = 0;
  3138  01AE  11B2               	bcf	_ChargeStatus/(0+8),_ChargeStatus& (0+7)
  3139  01AF  0008               	return
  3140  01B0                     __end_of_Charge_Detect:	
  3141                           
  3142                           	psect	text33
  3143  0305                     __ptext33:	
  3144  0305                     _Charge_Config:	
  3145 ;; *************** function _Charge_Config *****************
  3146 ;; Defined at:
  3147 ;;		line 36 in file "charge.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;		None
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;		None
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  1    wreg      void 
  3154 ;; Registers used:
  3155 ;;		status,2, status,0, pclath, cstack
  3156 ;; Tracked objects:
  3157 ;;		On entry : 100/0
  3158 ;;		On exit  : 100/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3161 ;;      Params:         0       0       0       0
  3162 ;;      Locals:         0       0       0       0
  3163 ;;      Temps:          0       0       0       0
  3164 ;;      Totals:         0       0       0       0
  3165 ;;Total ram usage:        0 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    3
  3168 ;; This function calls:
  3169 ;;		_Charge_Init
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           ;psect for function _Charge_Config
  3175                           
  3176                           
  3177                           ;charge.c: 38: Charge_Init();
  3178                           ;incstack = 0
  3179                           ; Regs used in _Charge_Config: [status,2+status,0+pclath+cstack]
  3180  0305  22AD               	fcall	_Charge_Init
  3181                           
  3182                           ;charge.c: 39: ChargeStatus = 0;
  3183  0306  11B2               	bcf	_ChargeStatus/(0+8),_ChargeStatus& (0+7)
  3184  0307  0008               	return
  3185  0308                     __end_of_Charge_Config:	
  3186                           
  3187                           	psect	text34
  3188  02AD                     __ptext34:	
  3189  02AD                     _Charge_Init:	
  3190 ;; *************** function _Charge_Init *****************
  3191 ;; Defined at:
  3192 ;;		line 14 in file "charge.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;                  1    wreg      void 
  3199 ;; Registers used:
  3200 ;;		None
  3201 ;; Tracked objects:
  3202 ;;		On entry : 100/0
  3203 ;;		On exit  : 100/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3206 ;;      Params:         0       0       0       0
  3207 ;;      Locals:         0       0       0       0
  3208 ;;      Temps:          0       0       0       0
  3209 ;;      Totals:         0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    2
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_Charge_Config
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           ;psect for function _Charge_Init
  3220                           
  3221                           
  3222                           ;charge.c: 16: *(unsigned int *)0x46 |= (0x40);
  3223                           ;incstack = 0
  3224                           ; Regs used in _Charge_Init: []
  3225  02AD  1746               	bsf	70,6
  3226                           
  3227                           ;charge.c: 17: *(unsigned int *)0x0D |= (0x40);
  3228  02AE  170D               	bsf	13,6
  3229                           
  3230                           ;charge.c: 18: *(unsigned int *)0x0B &= ~(0x40);
  3231  02AF  130B               	bcf	11,6
  3232                           
  3233                           ;charge.c: 20: *(unsigned int *)0x46 |= (0x80);
  3234  02B0  17C6               	bsf	70,7
  3235                           
  3236                           ;charge.c: 21: *(unsigned int *)0x0D &= ~(0x80);
  3237  02B1  138D               	bcf	13,7
  3238                           
  3239                           ;charge.c: 22: *(unsigned int *)0x0B |= (0x80);
  3240  02B2  178B               	bsf	11,7
  3241  02B3  0008               	return
  3242  02B4                     __end_of_Charge_Init:	
  3243                           
  3244                           	psect	text35
  3245  0295                     __ptext35:	
  3246  0295                     _Battery_Manage:	
  3247 ;; *************** function _Battery_Manage *****************
  3248 ;; Defined at:
  3249 ;;		line 93 in file "battery.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;		None
  3252 ;; Auto vars:     Size  Location     Type
  3253 ;;		None
  3254 ;; Return value:  Size  Location     Type
  3255 ;;                  1    wreg      void 
  3256 ;; Registers used:
  3257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3258 ;; Tracked objects:
  3259 ;;		On entry : 900/0
  3260 ;;		On exit  : 100/0
  3261 ;;		Unchanged: 0/0
  3262 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3263 ;;      Params:         0       0       0       0
  3264 ;;      Locals:         0       0       0       0
  3265 ;;      Temps:          0       0       0       0
  3266 ;;      Totals:         0       0       0       0
  3267 ;;Total ram usage:        0 bytes
  3268 ;; Hardware stack levels used:    1
  3269 ;; Hardware stack levels required when called:    4
  3270 ;; This function calls:
  3271 ;;		_Battery_Full_Judg
  3272 ;;		_Battery_LvdDetect
  3273 ;;		_Battery_StatusJudg
  3274 ;; This function is called by:
  3275 ;;		_main
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           ;psect for function _Battery_Manage
  3279                           
  3280                           
  3281                           ;battery.c: 96: Battery_Full_Judg();
  3282                           ;incstack = 0
  3283                           ; Regs used in _Battery_Manage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3284  0295  2163               	fcall	_Battery_Full_Judg
  3285                           
  3286                           ;battery.c: 98: if( !BatteryFullFlag )
  3287  0296  1832               	btfsc	_BatteryFullFlag/(0+8),_BatteryFullFlag& (0+7)
  3288  0297  2A9A               	goto	l7174
  3289                           
  3290                           ;battery.c: 99: {
  3291                           ;battery.c: 100: Battery_LvdDetect();
  3292  0298  21F2               	fcall	_Battery_LvdDetect
  3293                           
  3294                           ;battery.c: 101: }
  3295  0299  2A9D               	goto	l7176
  3296  029A                     l7174:	
  3297                           
  3298                           ;battery.c: 102: else
  3299                           ;battery.c: 103: {
  3300                           ;battery.c: 104: BatteryLvdTick = 0;
  3301  029A  01AB               	clrf	_BatteryLvdTick
  3302                           
  3303                           ;battery.c: 105: BatteryLvdCnt1 = 0;
  3304  029B  01AA               	clrf	_BatteryLvdCnt1
  3305                           
  3306                           ;battery.c: 106: BatteryLvdCnt2 = 0;
  3307  029C  01A9               	clrf	_BatteryLvdCnt2
  3308  029D                     l7176:	
  3309                           
  3310                           ;battery.c: 107: }
  3311                           ;battery.c: 109: Battery_StatusJudg();
  3312  029D  288B               	ljmp	l6950
  3313  029E                     __end_of_Battery_Manage:	
  3314                           
  3315                           	psect	text36
  3316  008B                     __ptext36:	
  3317  008B                     _Battery_StatusJudg:	
  3318 ;; *************** function _Battery_StatusJudg *****************
  3319 ;; Defined at:
  3320 ;;		line 160 in file "battery.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 100/0
  3331 ;;		On exit  : 100/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3334 ;;      Params:         0       0       0       0
  3335 ;;      Locals:         0       0       0       0
  3336 ;;      Temps:          0       0       0       0
  3337 ;;      Totals:         0       0       0       0
  3338 ;;Total ram usage:        0 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    3
  3341 ;; This function calls:
  3342 ;;		_SetLVD_Level
  3343 ;; This function is called by:
  3344 ;;		_Battery_Manage
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           ;psect for function _Battery_StatusJudg
  3348                           
  3349  008B                     l6950:	
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _Battery_StatusJudg: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3353                           ;battery.c: 163: {
  3354                           ;battery.c: 164: BatteryDieTick = 0;
  3355  008B  1232               	bcf	_PowerStatus/(0+8),_PowerStatus& (0+7)
  3356  008C  1E32               	btfss	_PowerStatus/(0+8),_PowerStatus& (0+7)
  3357  008D  2890               	goto	l6956
  3358                           
  3359                           ;battery.c: 165: BatteryDieCntSec = 0;
  3360  008E  01A7               	clrf	_BatteryDieCntSec
  3361                           
  3362                           ;battery.c: 166: BatteryDieCntFinishFlag = 0;
  3363  008F  10B2               	bcf	_BatteryDieCntFinishFlag/(0+8),_BatteryDieCntFinishFlag& (0+7)
  3364  0090                     l6956:	
  3365                           
  3366                           ;battery.c: 167: }
  3367                           ;battery.c: 169: if(BatteryStatusTick < 96)
  3368  0090  3060               	movlw	96
  3369  0091  022F               	subwf	_BatteryStatusTick,w
  3370  0092  1C03               	btfss	3,0
  3371  0093  0008               	return
  3372                           
  3373                           ;battery.c: 172: }
  3374                           ;battery.c: 173: BatteryStatusTick = 0;
  3375  0094  01AF               	clrf	_BatteryStatusTick
  3376                           
  3377                           ;battery.c: 175: if(BatteryFullFlag)
  3378  0095  1C32               	btfss	_BatteryFullFlag/(0+8),_BatteryFullFlag& (0+7)
  3379  0096  28A4               	goto	l6980
  3380  0097  300B               	movlw	11
  3381                           
  3382                           ;battery.c: 176: {
  3383                           ;battery.c: 177: BatteryStatusCnt1++;
  3384  0098  0AAE               	incf	_BatteryStatusCnt1,f
  3385                           
  3386                           ;battery.c: 178: BatteryStatusCnt2 = 0;
  3387  0099  01AD               	clrf	_BatteryStatusCnt2
  3388                           
  3389                           ;battery.c: 179: BatteryStatusCnt3 = 0;
  3390  009A  01AC               	clrf	_BatteryStatusCnt3
  3391                           
  3392                           ;battery.c: 180: if(BatteryStatusCnt1 > 10)
  3393  009B  022E               	subwf	_BatteryStatusCnt1,w
  3394  009C  1C03               	btfss	3,0
  3395  009D  28A1               	goto	l6976
  3396  009E  3003               	movlw	3
  3397                           
  3398                           ;battery.c: 181: {
  3399                           ;battery.c: 182: BatteryStatusCnt1 = 0;
  3400  009F  01AE               	clrf	_BatteryStatusCnt1
  3401  00A0                     L3:	
  3402                           
  3403                           ;battery.c: 183: BatteryStatus = 3;
  3404  00A0  00B0               	movwf	_BatteryStatus
  3405  00A1                     l6976:	
  3406                           
  3407                           ;battery.c: 186: BatteryDieCntSec = 0;
  3408  00A1  01A7               	clrf	_BatteryDieCntSec
  3409                           
  3410                           ;battery.c: 187: BatteryDieCntFinishFlag = 0;
  3411  00A2  10B2               	bcf	_BatteryDieCntFinishFlag/(0+8),_BatteryDieCntFinishFlag& (0+7)
  3412                           
  3413                           ;battery.c: 188: }
  3414  00A3  0008               	return
  3415  00A4                     l6980:	
  3416                           
  3417                           ;battery.c: 189: else
  3418                           ;battery.c: 190: {
  3419                           ;battery.c: 191: if(BatteryCurrCheckLevel != 1)
  3420  00A4  0328               	decf	_BatteryCurrCheckLevel,w
  3421  00A5  1903               	btfsc	3,2
  3422  00A6  28AB               	goto	l6986
  3423  00A7  3001               	movlw	1
  3424                           
  3425                           ;battery.c: 192: {
  3426                           ;battery.c: 193: BatteryCurrCheckLevel = 1;
  3427  00A8  01A8               	clrf	_BatteryCurrCheckLevel
  3428  00A9  0AA8               	incf	_BatteryCurrCheckLevel,f
  3429                           
  3430                           ;battery.c: 194: SetLVD_Level(1);
  3431  00AA  2218               	fcall	_SetLVD_Level
  3432  00AB                     l6986:	
  3433                           
  3434                           ;battery.c: 195: }
  3435                           ;battery.c: 197: if( BatteryLvdStatus == 0 )
  3436  00AB  1932               	btfsc	_BatteryLvdStatus/(0+8),_BatteryLvdStatus& (0+7)
  3437  00AC  28BA               	goto	l7004
  3438  00AD  300B               	movlw	11
  3439                           
  3440                           ;battery.c: 198: {
  3441                           ;battery.c: 199: BatteryStatusCnt1 = 0;
  3442  00AE  01AE               	clrf	_BatteryStatusCnt1
  3443                           
  3444                           ;battery.c: 200: BatteryStatusCnt2++;
  3445  00AF  0AAD               	incf	_BatteryStatusCnt2,f
  3446                           
  3447                           ;battery.c: 201: BatteryStatusCnt3 = 0;
  3448  00B0  01AC               	clrf	_BatteryStatusCnt3
  3449                           
  3450                           ;battery.c: 202: if(BatteryStatusCnt2 > 10)
  3451  00B1  022D               	subwf	_BatteryStatusCnt2,w
  3452  00B2  1C03               	btfss	3,0
  3453  00B3  28B7               	goto	l7000
  3454                           
  3455                           ;battery.c: 203: {
  3456                           ;battery.c: 204: BatteryStatusCnt2 = 0;
  3457  00B4  01AD               	clrf	_BatteryStatusCnt2
  3458                           
  3459                           ;battery.c: 205: BatteryStatus = 1;
  3460  00B5  01B0               	clrf	_BatteryStatus
  3461  00B6  0AB0               	incf	_BatteryStatus,f
  3462  00B7                     l7000:	
  3463                           
  3464                           ;battery.c: 206: }
  3465                           ;battery.c: 208: if(BatteryDieCntFinishFlag)
  3466  00B7  18B2               	btfsc	_BatteryDieCntFinishFlag/(0+8),_BatteryDieCntFinishFlag& (0+7)
  3467                           
  3468                           ;battery.c: 209: {
  3469                           ;battery.c: 210: BatteryStatus = 0;
  3470  00B8  01B0               	clrf	_BatteryStatus
  3471  00B9  0008               	return
  3472  00BA                     l7004:	
  3473  00BA  300B               	movlw	11
  3474                           
  3475                           ;battery.c: 213: else
  3476                           ;battery.c: 214: {
  3477                           ;battery.c: 215: BatteryStatusCnt1 = 0;
  3478  00BB  01AE               	clrf	_BatteryStatusCnt1
  3479                           
  3480                           ;battery.c: 216: BatteryStatusCnt2 = 0;
  3481  00BC  01AD               	clrf	_BatteryStatusCnt2
  3482                           
  3483                           ;battery.c: 217: BatteryStatusCnt3++;
  3484  00BD  0AAC               	incf	_BatteryStatusCnt3,f
  3485                           
  3486                           ;battery.c: 218: if(BatteryStatusCnt3 > 10)
  3487  00BE  022C               	subwf	_BatteryStatusCnt3,w
  3488  00BF  1C03               	btfss	3,0
  3489  00C0  0008               	return
  3490  00C1  3002               	movlw	2
  3491                           
  3492                           ;battery.c: 219: {
  3493                           ;battery.c: 220: BatteryStatusCnt3 = 0;
  3494  00C2  01AC               	clrf	_BatteryStatusCnt3
  3495                           
  3496                           ;battery.c: 223: BatteryDieTick = 0;
  3497  00C3  28A0               	goto	L3
  3498  00C4                     __end_of_Battery_StatusJudg:	
  3499                           
  3500                           	psect	text37
  3501  0218                     __ptext37:	
  3502  0218                     _SetLVD_Level:	
  3503 ;; *************** function _SetLVD_Level *****************
  3504 ;; Defined at:
  3505 ;;		line 72 in file "battery.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  level           1    wreg     unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  level           1    2[BANK0 ] unsigned char 
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1    wreg      void 
  3512 ;; Registers used:
  3513 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 100/0
  3516 ;;		On exit  : 100/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3519 ;;      Params:         0       0       0       0
  3520 ;;      Locals:         0       1       0       0
  3521 ;;      Temps:          0       0       0       0
  3522 ;;      Totals:         0       1       0       0
  3523 ;;Total ram usage:        1 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    2
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_Battery_StatusJudg
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           ;psect for function _SetLVD_Level
  3533                           
  3534                           
  3535                           ;incstack = 0
  3536                           ; Regs used in _SetLVD_Level: [wreg-fsr0h+status,2+status,0]
  3537                           ;SetLVD_Level@level stored from wreg
  3538  0218  00B5               	movwf	SetLVD_Level@level
  3539                           
  3540                           ;battery.c: 74: LVDCR &= ~0x1f;
  3541  0219  30E0               	movlw	224
  3542  021A  0588               	andwf	8,f	;volatile
  3543                           
  3544                           ;battery.c: 76: switch(level)
  3545  021B  2A21               	goto	l6810
  3546  021C                     l6804:	
  3547                           
  3548                           ;battery.c: 79: LVDCR |= 0x09 << 1;
  3549  021C  3012               	movlw	18
  3550  021D  2A1F               	goto	L4
  3551  021E                     l6806:	
  3552                           
  3553                           ;battery.c: 80: break;
  3554                           ;battery.c: 83: LVDCR |= 0x0A << 1;
  3555  021E  3014               	movlw	20
  3556  021F                     L4:	
  3557  021F  0488               	iorwf	8,f	;volatile
  3558                           
  3559                           ;battery.c: 84: break;
  3560  0220  2A28               	goto	l502
  3561  0221                     l6810:	
  3562  0221  0835               	movf	SetLVD_Level@level,w
  3563                           
  3564                           ; Switch size 1, requested type "space"
  3565                           ; Number of cases is 2, Range of values is 0 to 1
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte            7     4 (average)
  3569                           ; direct_byte            8     6 (fixed)
  3570                           ; jumptable            260     6 (fixed)
  3571                           ;	Chosen strategy is simple_byte
  3572  0222  3A00               	xorlw	0	; case 0
  3573  0223  1903               	btfsc	3,2
  3574  0224  2A1C               	goto	l6804
  3575  0225  3A01               	xorlw	1	; case 1
  3576  0226  1903               	btfsc	3,2
  3577  0227  2A1E               	goto	l6806
  3578  0228                     l502:	
  3579                           
  3580                           ;battery.c: 90: LVDCR |= 0x01;
  3581  0228  1408               	bsf	8,0	;volatile
  3582  0229  0008               	return
  3583  022A                     __end_of_SetLVD_Level:	
  3584                           
  3585                           	psect	text38
  3586  01F2                     __ptext38:	
  3587  01F2                     _Battery_LvdDetect:	
  3588 ;; *************** function _Battery_LvdDetect *****************
  3589 ;; Defined at:
  3590 ;;		line 269 in file "battery.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;		None
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0, pclath, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 900/0
  3601 ;;		On exit  : 100/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3604 ;;      Params:         0       0       0       0
  3605 ;;      Locals:         0       0       0       0
  3606 ;;      Temps:          0       0       0       0
  3607 ;;      Totals:         0       0       0       0
  3608 ;;Total ram usage:        0 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; Hardware stack levels required when called:    3
  3611 ;; This function calls:
  3612 ;;		_Get_Lvdf
  3613 ;; This function is called by:
  3614 ;;		_Battery_Manage
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           ;psect for function _Battery_LvdDetect
  3618                           
  3619                           
  3620                           ;battery.c: 273: if(Get_Lvdf())
  3621                           ;incstack = 0
  3622                           ; Regs used in _Battery_LvdDetect: [wreg+status,2+status,0+pclath+cstack]
  3623  01F2  22B4               	fcall	_Get_Lvdf
  3624  01F3  300B               	movlw	11
  3625  01F4  1C03               	btfss	3,0
  3626  01F5  29FE               	goto	L5
  3627                           
  3628                           ;battery.c: 274: {
  3629                           ;battery.c: 275: BatteryLvdCnt1++;
  3630  01F6  0AAA               	incf	_BatteryLvdCnt1,f
  3631                           
  3632                           ;battery.c: 276: BatteryLvdCnt2 = 0;
  3633  01F7  01A9               	clrf	_BatteryLvdCnt2
  3634                           
  3635                           ;battery.c: 277: if(BatteryLvdCnt1 > 10)
  3636  01F8  022A               	subwf	_BatteryLvdCnt1,w
  3637  01F9  1C03               	btfss	3,0
  3638  01FA  0008               	return
  3639                           
  3640                           ;battery.c: 278: {
  3641                           ;battery.c: 279: BatteryLvdCnt1 = 0;
  3642  01FB  01AA               	clrf	_BatteryLvdCnt1
  3643                           
  3644                           ;battery.c: 280: BatteryLvdStatus = 0;
  3645  01FC  1132               	bcf	_BatteryLvdStatus/(0+8),_BatteryLvdStatus& (0+7)
  3646  01FD  0008               	return
  3647  01FE                     L5:	
  3648                           
  3649                           ;battery.c: 283: else
  3650                           ;battery.c: 284: {
  3651                           ;battery.c: 285: BatteryLvdCnt1 = 0;
  3652  01FE  01AA               	clrf	_BatteryLvdCnt1
  3653                           
  3654                           ;battery.c: 286: BatteryLvdCnt2++;
  3655  01FF  0AA9               	incf	_BatteryLvdCnt2,f
  3656                           
  3657                           ;battery.c: 287: if(BatteryLvdCnt2 > 10)
  3658  0200  0229               	subwf	_BatteryLvdCnt2,w
  3659  0201  1C03               	btfss	3,0
  3660  0202  0008               	return
  3661                           
  3662                           ;battery.c: 288: {
  3663                           ;battery.c: 289: BatteryLvdCnt2 = 0;
  3664  0203  01A9               	clrf	_BatteryLvdCnt2
  3665                           
  3666                           ;battery.c: 290: BatteryLvdStatus = 1;
  3667  0204  1532               	bsf	_BatteryLvdStatus/(0+8),_BatteryLvdStatus& (0+7)
  3668  0205  0008               	return
  3669  0206                     __end_of_Battery_LvdDetect:	
  3670                           
  3671                           	psect	text39
  3672  0163                     __ptext39:	
  3673  0163                     _Battery_Full_Judg:	
  3674 ;; *************** function _Battery_Full_Judg *****************
  3675 ;; Defined at:
  3676 ;;		line 234 in file "battery.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 900/0
  3687 ;;		On exit  : 900/0
  3688 ;;		Unchanged: 800/0
  3689 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3690 ;;      Params:         0       0       0       0
  3691 ;;      Locals:         0       0       0       0
  3692 ;;      Temps:          0       0       0       0
  3693 ;;      Totals:         0       0       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    2
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_Battery_Manage
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           ;psect for function _Battery_Full_Judg
  3704                           
  3705                           
  3706                           ;battery.c: 236: if(BatteryFullJudgTick < 78)
  3707                           ;incstack = 0
  3708                           ; Regs used in _Battery_Full_Judg: [wreg+status,2+status,0]
  3709  0163  304E               	movlw	78
  3710  0164  0226               	subwf	_BatteryFullJudgTick,w
  3711  0165  1C03               	btfss	3,0
  3712  0166  0008               	return
  3713                           
  3714                           ;battery.c: 239: }
  3715                           ;battery.c: 240: BatteryFullJudgTick = 0;
  3716  0167  01A6               	clrf	_BatteryFullJudgTick
  3717                           
  3718                           ;battery.c: 242: if(( (*((unsigned int *)0x06)) & (0x80) ) && ChargeStatus == 1)
  3719  0168  1B86               	btfsc	6,7
  3720  0169  1DB2               	btfss	_ChargeStatus/(0+8),_ChargeStatus& (0+7)
  3721  016A  2974               	goto	l6918
  3722  016B  300B               	movlw	11
  3723                           
  3724                           ;battery.c: 243: {
  3725                           ;battery.c: 244: BatteryFullCnt1++;
  3726  016C  0AA5               	incf	_BatteryFullCnt1,f
  3727                           
  3728                           ;battery.c: 245: BatteryFullCnt2 = 0;
  3729  016D  01A4               	clrf	_BatteryFullCnt2
  3730                           
  3731                           ;battery.c: 246: if( BatteryFullCnt1 > 10 )
  3732  016E  0225               	subwf	_BatteryFullCnt1,w
  3733  016F  1C03               	btfss	3,0
  3734  0170  0008               	return
  3735                           
  3736                           ;battery.c: 247: {
  3737                           ;battery.c: 248: BatteryFullCnt1 = 0;
  3738  0171  01A5               	clrf	_BatteryFullCnt1
  3739                           
  3740                           ;battery.c: 250: BatteryFullFlag = 1;
  3741  0172  1432               	bsf	_BatteryFullFlag/(0+8),_BatteryFullFlag& (0+7)
  3742  0173  0008               	return
  3743  0174                     l6918:	
  3744  0174  300B               	movlw	11
  3745                           
  3746                           ;battery.c: 253: else
  3747                           ;battery.c: 254: {
  3748                           ;battery.c: 255: BatteryFullCnt1 = 0;
  3749  0175  01A5               	clrf	_BatteryFullCnt1
  3750                           
  3751                           ;battery.c: 256: BatteryFullCnt2++;
  3752  0176  0AA4               	incf	_BatteryFullCnt2,f
  3753                           
  3754                           ;battery.c: 257: if( BatteryFullCnt2 > 10 )
  3755  0177  0224               	subwf	_BatteryFullCnt2,w
  3756  0178  1C03               	btfss	3,0
  3757  0179  0008               	return
  3758                           
  3759                           ;battery.c: 258: {
  3760                           ;battery.c: 259: BatteryFullCnt2 = 0;
  3761  017A  01A4               	clrf	_BatteryFullCnt2
  3762                           
  3763                           ;battery.c: 261: BatteryFullFlag = 0;
  3764  017B  1032               	bcf	_BatteryFullFlag/(0+8),_BatteryFullFlag& (0+7)
  3765  017C  0008               	return
  3766  017D                     __end_of_Battery_Full_Judg:	
  3767                           
  3768                           	psect	text40
  3769  030C                     __ptext40:	
  3770  030C                     _Battery_Init:	
  3771 ;; *************** function _Battery_Init *****************
  3772 ;; Defined at:
  3773 ;;		line 299 in file "battery.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;		None
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;		None
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  1    wreg      void 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, pclath, cstack
  3782 ;; Tracked objects:
  3783 ;;		On entry : 100/0
  3784 ;;		On exit  : 100/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3787 ;;      Params:         0       0       0       0
  3788 ;;      Locals:         0       0       0       0
  3789 ;;      Temps:          0       0       0       0
  3790 ;;      Totals:         0       0       0       0
  3791 ;;Total ram usage:        0 bytes
  3792 ;; Hardware stack levels used:    1
  3793 ;; Hardware stack levels required when called:    5
  3794 ;; This function calls:
  3795 ;;		_Battery_Init_Data
  3796 ;; This function is called by:
  3797 ;;		_main
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           ;psect for function _Battery_Init
  3801                           
  3802                           
  3803                           ;battery.c: 301: BatteryFullFlag = 0;
  3804                           ;incstack = 0
  3805                           ; Regs used in _Battery_Init: [wreg+status,2+status,0+pclath+cstack]
  3806  030C  1032               	bcf	_BatteryFullFlag/(0+8),_BatteryFullFlag& (0+7)
  3807                           
  3808                           ;battery.c: 302: Battery_Init_Data();
  3809  030D  29B0               	ljmp	l7018
  3810  030E                     __end_of_Battery_Init:	
  3811                           
  3812                           	psect	text41
  3813  01B0                     __ptext41:	
  3814  01B0                     _Battery_Init_Data:	
  3815 ;; *************** function _Battery_Init_Data *****************
  3816 ;; Defined at:
  3817 ;;		line 307 in file "battery.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  i               1    6[BANK0 ] unsigned char 
  3822 ;;  BatteryLowCn    1    5[BANK0 ] unsigned char 
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, pclath, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 100/0
  3829 ;;		On exit  : 100/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3832 ;;      Params:         0       0       0       0
  3833 ;;      Locals:         0       2       0       0
  3834 ;;      Temps:          0       0       0       0
  3835 ;;      Totals:         0       2       0       0
  3836 ;;Total ram usage:        2 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    4
  3839 ;; This function calls:
  3840 ;;		_DelayMs
  3841 ;;		_Get_Lvdf
  3842 ;;		_Lvd_Init
  3843 ;; This function is called by:
  3844 ;;		_Battery_Init
  3845 ;;		_Sleep_Manage
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           ;psect for function _Battery_Init_Data
  3849                           
  3850  01B0                     l7018:	
  3851                           
  3852                           ;incstack = 0
  3853                           ; Regs used in _Battery_Init_Data: [wreg+status,2+status,0+pclath+cstack]
  3854                           ;battery.c: 310: unsigned char BatteryLowCnt = 0;
  3855  01B0  01B8               	clrf	Battery_Init_Data@BatteryLowCnt
  3856                           
  3857                           ;battery.c: 312: Lvd_Init();
  3858  01B1  22C7               	fcall	_Lvd_Init
  3859                           
  3860                           ;battery.c: 314: for(i = 0; i < 2; i++)
  3861  01B2  01B9               	clrf	Battery_Init_Data@i
  3862  01B3                     l7028:	
  3863                           
  3864                           ;battery.c: 315: {
  3865                           ;battery.c: 316: DelayMs(20);
  3866  01B3  3014               	movlw	20
  3867  01B4  00B6               	movwf	DelayMs@t
  3868  01B5  01B7               	clrf	DelayMs@t+1
  3869  01B6  225E               	fcall	_DelayMs
  3870                           
  3871                           ;battery.c: 317: if(Get_Lvdf())
  3872  01B7  22B4               	fcall	_Get_Lvdf
  3873  01B8  1803               	btfsc	3,0
  3874                           
  3875                           ;battery.c: 318: {
  3876                           ;battery.c: 319: BatteryLowCnt++;
  3877  01B9  0AB8               	incf	Battery_Init_Data@BatteryLowCnt,f
  3878  01BA  3002               	movlw	2
  3879  01BB  0AB9               	incf	Battery_Init_Data@i,f
  3880  01BC  0239               	subwf	Battery_Init_Data@i,w
  3881  01BD  1C03               	btfss	3,0
  3882  01BE  29B3               	goto	l7028
  3883                           
  3884                           ;battery.c: 320: }
  3885                           ;battery.c: 321: }
  3886                           ;battery.c: 323: if(BatteryLowCnt)
  3887  01BF  0838               	movf	Battery_Init_Data@BatteryLowCnt,w
  3888  01C0  1903               	btfsc	3,2
  3889  01C1  29C4               	goto	l7038
  3890                           
  3891                           ;battery.c: 324: {
  3892                           ;battery.c: 325: BatteryStatus = 0;
  3893  01C2  01B0               	clrf	_BatteryStatus
  3894                           
  3895                           ;battery.c: 326: }
  3896  01C3  0008               	return
  3897  01C4                     l7038:	
  3898                           
  3899                           ;battery.c: 327: else
  3900                           ;battery.c: 328: {
  3901                           ;battery.c: 329: BatteryStatus = 2;
  3902  01C4  3002               	movlw	2
  3903  01C5  00B0               	movwf	_BatteryStatus
  3904  01C6  0008               	return
  3905  01C7                     __end_of_Battery_Init_Data:	
  3906                           
  3907                           	psect	text42
  3908  02C7                     __ptext42:	
  3909  02C7                     _Lvd_Init:	
  3910 ;; *************** function _Lvd_Init *****************
  3911 ;; Defined at:
  3912 ;;		line 32 in file "battery.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;		None
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;		None
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      void 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0
  3921 ;; Tracked objects:
  3922 ;;		On entry : 100/0
  3923 ;;		On exit  : 100/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3926 ;;      Params:         0       0       0       0
  3927 ;;      Locals:         0       0       0       0
  3928 ;;      Temps:          0       0       0       0
  3929 ;;      Totals:         0       0       0       0
  3930 ;;Total ram usage:        0 bytes
  3931 ;; Hardware stack levels used:    1
  3932 ;; Hardware stack levels required when called:    2
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_Battery_Init_Data
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           ;psect for function _Lvd_Init
  3940                           
  3941                           
  3942                           ;battery.c: 34: LVDCR &= ~0x1f;
  3943                           ;incstack = 0
  3944                           ; Regs used in _Lvd_Init: [wreg+status,2+status,0]
  3945  02C7  30E0               	movlw	224
  3946  02C8  0588               	andwf	8,f	;volatile
  3947                           
  3948                           ;battery.c: 35: LVDCR |= 0x0A << 1;
  3949  02C9  3014               	movlw	20
  3950  02CA  0488               	iorwf	8,f	;volatile
  3951                           
  3952                           ;battery.c: 36: LVDCR |= 0x01;
  3953  02CB  1408               	bsf	8,0	;volatile
  3954  02CC  0008               	return
  3955  02CD                     __end_of_Lvd_Init:	
  3956                           
  3957                           	psect	text43
  3958  02B4                     __ptext43:	
  3959  02B4                     _Get_Lvdf:	
  3960 ;; *************** function _Get_Lvdf *****************
  3961 ;; Defined at:
  3962 ;;		line 42 in file "battery.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  result          1    2[BANK0 ] unsigned char 
  3967 ;; Return value:  Size  Location     Type
  3968 ;;		None               void
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0
  3971 ;; Tracked objects:
  3972 ;;		On entry : 100/0
  3973 ;;		On exit  : 100/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  3976 ;;      Params:         0       0       0       0
  3977 ;;      Locals:         0       1       0       0
  3978 ;;      Temps:          0       0       0       0
  3979 ;;      Totals:         0       1       0       0
  3980 ;;Total ram usage:        1 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    2
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_Battery_LvdDetect
  3987 ;;		_Battery_Init_Data
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           ;psect for function _Get_Lvdf
  3991                           
  3992                           
  3993                           ;battery.c: 44: unsigned char result = 0;
  3994                           ;incstack = 0
  3995                           ; Regs used in _Get_Lvdf: [wreg+status,2+status,0]
  3996  02B4  01B5               	clrf	Get_Lvdf@result
  3997                           
  3998                           ;battery.c: 45: if(LVDF)
  3999  02B5  1F88               	btfss	8,7	;volatile
  4000  02B6  2AB9               	goto	l6798
  4001                           
  4002                           ;battery.c: 46: {
  4003                           ;battery.c: 47: result = 1;
  4004  02B7  01B5               	clrf	Get_Lvdf@result
  4005  02B8  0AB5               	incf	Get_Lvdf@result,f
  4006  02B9                     l6798:	
  4007                           
  4008                           ;battery.c: 48: }
  4009                           ;battery.c: 50: return (bit)result;
  4010  02B9  0C35               	rrf	Get_Lvdf@result,w
  4011  02BA  0008               	return
  4012  02BB                     __end_of_Get_Lvdf:	
  4013                           
  4014                           	psect	text44
  4015  025E                     __ptext44:	
  4016  025E                     _DelayMs:	
  4017 ;; *************** function _DelayMs *****************
  4018 ;; Defined at:
  4019 ;;		line 78 in file "driver.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  t               2    3[BANK0 ] unsigned int 
  4022 ;; Auto vars:     Size  Location     Type
  4023 ;;		None
  4024 ;; Return value:  Size  Location     Type
  4025 ;;                  1    wreg      void 
  4026 ;; Registers used:
  4027 ;;		wreg, status,2, status,0, pclath, cstack
  4028 ;; Tracked objects:
  4029 ;;		On entry : 100/0
  4030 ;;		On exit  : 100/0
  4031 ;;		Unchanged: 0/0
  4032 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  4033 ;;      Params:         0       2       0       0
  4034 ;;      Locals:         0       0       0       0
  4035 ;;      Temps:          0       0       0       0
  4036 ;;      Totals:         0       2       0       0
  4037 ;;Total ram usage:        2 bytes
  4038 ;; Hardware stack levels used:    1
  4039 ;; Hardware stack levels required when called:    3
  4040 ;; This function calls:
  4041 ;;		_DelayUs2x
  4042 ;; This function is called by:
  4043 ;;		_Battery_Init_Data
  4044 ;;		_main
  4045 ;;		_Sleep_Manage
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           ;psect for function _DelayMs
  4049                           
  4050  025E                     l6816:	
  4051                           
  4052                           ;driver.c: 81: while(t--)
  4053                           ;incstack = 0
  4054                           ; Regs used in _DelayMs: [wreg+status,2+status,0+pclath+cstack]
  4055  025E  3001               	movlw	1
  4056  025F  02B6               	subwf	DelayMs@t,f
  4057  0260  3000               	movlw	0
  4058  0261  1C03               	btfss	3,0
  4059  0262  03B7               	decf	DelayMs@t+1,f
  4060  0263  02B7               	subwf	DelayMs@t+1,f
  4061  0264  0F36               	incfsz	DelayMs@t,w
  4062  0265  2A69               	goto	l6814
  4063  0266  0A37               	incf	DelayMs@t+1,w
  4064  0267  1903               	btfsc	3,2
  4065  0268  0008               	return
  4066  0269                     l6814:	
  4067                           
  4068                           ;driver.c: 82: {
  4069                           ;driver.c: 84: DelayUs2x(120);
  4070  0269  3078               	movlw	120
  4071  026A  22F5               	fcall	_DelayUs2x
  4072                           
  4073                           ;driver.c: 85: DelayUs2x(125);
  4074  026B  307D               	movlw	125
  4075  026C  22F5               	fcall	_DelayUs2x
  4076  026D  2A5E               	goto	l6816
  4077  026E                     __end_of_DelayMs:	
  4078                           
  4079                           	psect	text45
  4080  02F5                     __ptext45:	
  4081  02F5                     _DelayUs2x:	
  4082 ;; *************** function _DelayUs2x *****************
  4083 ;; Defined at:
  4084 ;;		line 69 in file "driver.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  t               1    wreg     unsigned char 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  t               1    2[BANK0 ] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg
  4093 ;; Tracked objects:
  4094 ;;		On entry : 100/0
  4095 ;;		On exit  : 100/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  4098 ;;      Params:         0       0       0       0
  4099 ;;      Locals:         0       1       0       0
  4100 ;;      Temps:          0       0       0       0
  4101 ;;      Totals:         0       1       0       0
  4102 ;;Total ram usage:        1 bytes
  4103 ;; Hardware stack levels used:    1
  4104 ;; Hardware stack levels required when called:    2
  4105 ;; This function calls:
  4106 ;;		Nothing
  4107 ;; This function is called by:
  4108 ;;		_DelayMs
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           ;psect for function _DelayUs2x
  4112                           
  4113                           
  4114                           ;incstack = 0
  4115                           ; Regs used in _DelayUs2x: [wreg]
  4116                           ;DelayUs2x@t stored from wreg
  4117  02F5  00B5               	movwf	DelayUs2x@t
  4118  02F6                     l6786:	
  4119                           
  4120                           ;driver.c: 71: while(--t);
  4121  02F6  0BB5               	decfsz	DelayUs2x@t,f
  4122  02F7  2AF6               	goto	l6786
  4123  02F8  0008               	return
  4124  02F9                     __end_of_DelayUs2x:	
  4125                           
  4126                           	psect	text46
  4127  0123                     __ptext46:	
  4128  0123                     _Timer2_Isr:	
  4129 ;; *************** function _Timer2_Isr *****************
  4130 ;; Defined at:
  4131 ;;		line 7 in file "interrupt.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0, pclath, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 100/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  4145 ;;      Params:         0       0       0       0
  4146 ;;      Locals:         0       0       0       0
  4147 ;;      Temps:          0       2       0       0
  4148 ;;      Totals:         0       2       0       0
  4149 ;;Total ram usage:        2 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    1
  4152 ;; This function calls:
  4153 ;;		_BatteryTick_Ctrl
  4154 ;;		_ChargeTick_Ctrl
  4155 ;;		_SleepTick_Ctlr
  4156 ;; This function is called by:
  4157 ;;		Interrupt level 1
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           ;psect for function _Timer2_Isr
  4161                           
  4162                           
  4163                           ;interrupt.c: 9: static unsigned char timer_1ms = 0;
  4164                           ;interrupt.c: 11: if(PBIF)
  4165  0123  1A0E               	btfsc	14,4	;volatile
  4166                           
  4167                           ;interrupt.c: 12: {
  4168                           ;interrupt.c: 13: PBIF = 0;
  4169  0124  120E               	bcf	14,4	;volatile
  4170                           
  4171                           ;interrupt.c: 14: }
  4172                           ;interrupt.c: 16: if(T2IF)
  4173  0125  1ECB               	btfss	75,5	;volatile
  4174  0126  2934               	goto	i1l2906
  4175                           
  4176                           ;interrupt.c: 17: {
  4177                           ;interrupt.c: 18: T2IF = 0;
  4178  0127  12CB               	bcf	75,5	;volatile
  4179                           
  4180                           ;interrupt.c: 19: T2EN = 0;
  4181  0128  13D0               	bcf	80,7	;volatile
  4182                           
  4183                           ;interrupt.c: 20: T2EN = 1;
  4184  0129  17D0               	bsf	80,7	;volatile
  4185  012A  3010               	movlw	16
  4186                           
  4187                           ;interrupt.c: 21: timer_1ms++;
  4188  012B  0A9E               	incf	Timer2_Isr@timer_1ms,f
  4189                           
  4190                           ;interrupt.c: 22: if(timer_1ms >= 16)
  4191  012C  021E               	subwf	Timer2_Isr@timer_1ms,w
  4192  012D  1C03               	btfss	3,0
  4193  012E  2934               	goto	i1l2906
  4194                           
  4195                           ;interrupt.c: 23: {
  4196                           ;interrupt.c: 24: timer_1ms=0;
  4197  012F  019E               	clrf	Timer2_Isr@timer_1ms
  4198                           
  4199                           ;interrupt.c: 25: KeyTick++;
  4200  0130  0A9F               	incf	_KeyTick,f
  4201                           
  4202                           ;interrupt.c: 27: BatteryTick_Ctrl();
  4203  0131  222A               	fcall	_BatteryTick_Ctrl
  4204                           
  4205                           ;interrupt.c: 28: ChargeTick_Ctrl();
  4206  0132  22DC               	fcall	_ChargeTick_Ctrl
  4207                           
  4208                           ;interrupt.c: 29: SleepTick_Ctlr();
  4209  0133  217D               	fcall	_SleepTick_Ctlr
  4210  0134                     i1l2906:	
  4211  0134  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0135  0834               	movf	??_Timer2_Isr+1,w
  4213  0136  008A               	movwf	10
  4214  0137  18B3               	btfsc	??_Timer2_Isr^0,1
  4215  0138  293E               	goto	REV_BANK1
  4216  0139  0E33               	swapf	??_Timer2_Isr^0,w
  4217  013A  0083               	movwf	3
  4218  013B  0EBE               	swapf	62,f
  4219  013C  0E3E               	swapf	62,w
  4220  013D  0009               	retfie
  4221  013E                     REV_BANK1:	
  4222  013E  0E33               	swapf	??_Timer2_Isr^0,w
  4223  013F  0083               	movwf	3
  4224  0140  1283               	bcf	3,5
  4225  0141  0EBE               	swapf	62,f
  4226  0142  0E3E               	swapf	62,w
  4227  0143  1683               	bsf	3,5
  4228  0144  0009               	retfie
  4229  0145                     __end_of_Timer2_Isr:	
  4230                           
  4231                           	psect	intentry
  4232  0008                     __pintentry:	
  4233  0008                     interrupt_function:	
  4234                           ;incstack = 0
  4235                           ; Regs used in _Timer2_Isr: [wreg+status,2+status,0+pclath+cstack]
  4236                           
  4237  003E                     saved_w	set	btemp
  4238  0008  1A83               	btfsc	3,5
  4239  0009  280C               	goto	SAVE_BANK1
  4240  000A  00BE               	movwf	btemp
  4241  000B  280F               	goto	EXIT_BANK_SAVE
  4242  000C                     SAVE_BANK1:	
  4243  000C  1283               	bcf	3,5
  4244  000D  00BE               	movwf	btemp
  4245  000E  1683               	bsf	3,5
  4246  000F                     EXIT_BANK_SAVE:	
  4247  000F  0E03               	swapf	3,w
  4248  0010  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0011  00B3               	movwf	??_Timer2_Isr
  4250  0012  080A               	movf	10,w
  4251  0013  00B4               	movwf	??_Timer2_Isr+1
  4252  0014  2923               	ljmp	_Timer2_Isr
  4253                           
  4254                           	psect	text47
  4255  017D                     __ptext47:	
  4256  017D                     _SleepTick_Ctlr:	
  4257 ;; *************** function _SleepTick_Ctlr *****************
  4258 ;; Defined at:
  4259 ;;		line 12 in file "sleep.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0
  4268 ;; Tracked objects:
  4269 ;;		On entry : 100/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  4273 ;;      Params:         0       0       0       0
  4274 ;;      Locals:         0       0       0       0
  4275 ;;      Temps:          0       0       0       0
  4276 ;;      Totals:         0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; This function calls:
  4280 ;;		Nothing
  4281 ;; This function is called by:
  4282 ;;		_Timer2_Isr
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           ;psect for function _SleepTick_Ctlr
  4286                           
  4287                           
  4288                           ;sleep.c: 14: if( PowerStatus == 0 && ChargeStatus == 0 )
  4289                           ;incstack = 0
  4290                           ; Regs used in _SleepTick_Ctlr: [wreg+status,2+status,0]
  4291  017D  1E32               	btfss	_PowerStatus/(0+8),_PowerStatus& (0+7)
  4292  017E  19B2               	btfsc	_ChargeStatus/(0+8),_ChargeStatus& (0+7)
  4293  017F  2991               	goto	i1l7274
  4294                           
  4295                           ;sleep.c: 15: {
  4296                           ;sleep.c: 17: if( PowerOffPrepareToSleepTick < 10000 )
  4297  0180  3027               	movlw	39
  4298  0181  1683               	bsf	3,5	;RP0=1, select bank1
  4299  0182  024F               	subwf	(_PowerOffPrepareToSleepTick+1)^(0+128),w
  4300  0183  3010               	movlw	16
  4301  0184  1903               	btfsc	3,2
  4302  0185  024E               	subwf	_PowerOffPrepareToSleepTick^(0+128),w
  4303  0186  1803               	btfsc	3,0
  4304  0187  298C               	goto	i1l7270
  4305                           
  4306                           ;sleep.c: 18: {
  4307                           ;sleep.c: 19: PowerOffPrepareToSleepTick++;
  4308  0188  0ACE               	incf	_PowerOffPrepareToSleepTick^(0+128),f
  4309  0189  1903               	btfsc	3,2
  4310  018A  0ACF               	incf	(_PowerOffPrepareToSleepTick+1)^(0+128),f
  4311                           
  4312                           ;sleep.c: 20: }
  4313  018B  0008               	return
  4314  018C                     i1l7270:	
  4315                           
  4316                           ;sleep.c: 21: else
  4317                           ;sleep.c: 22: {
  4318                           ;sleep.c: 23: PowerOffPrepareToSleepTick = 0;
  4319  018C  01CE               	clrf	_PowerOffPrepareToSleepTick^(0+128)
  4320  018D  01CF               	clrf	(_PowerOffPrepareToSleepTick+1)^(0+128)
  4321                           
  4322                           ;sleep.c: 24: SleepSig = 1;
  4323  018E  1283               	bcf	3,5	;RP0=0, select bank0
  4324  018F  1431               	bsf	_SleepSig/(0+8),_SleepSig& (0+7)
  4325  0190  0008               	return
  4326  0191                     i1l7274:	
  4327                           
  4328                           ;sleep.c: 27: else
  4329                           ;sleep.c: 28: {
  4330                           ;sleep.c: 29: PowerOffPrepareToSleepTick = 0;
  4331  0191  1683               	bsf	3,5	;RP0=1, select bank1
  4332  0192  01CE               	clrf	_PowerOffPrepareToSleepTick^(0+128)
  4333  0193  01CF               	clrf	(_PowerOffPrepareToSleepTick+1)^(0+128)
  4334                           
  4335                           ;sleep.c: 30: SleepSig = 0;
  4336  0194  1283               	bcf	3,5	;RP0=0, select bank0
  4337  0195  1031               	bcf	_SleepSig/(0+8),_SleepSig& (0+7)
  4338  0196  0008               	return
  4339  0197                     __end_of_SleepTick_Ctlr:	
  4340                           
  4341                           	psect	text48
  4342  02DC                     __ptext48:	
  4343  02DC                     _ChargeTick_Ctrl:	
  4344 ;; *************** function _ChargeTick_Ctrl *****************
  4345 ;; Defined at:
  4346 ;;		line 25 in file "charge.c"
  4347 ;; Parameters:    Size  Location     Type
  4348 ;;		None
  4349 ;; Auto vars:     Size  Location     Type
  4350 ;;		None
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  1    wreg      void 
  4353 ;; Registers used:
  4354 ;;		wreg, status,2, status,0
  4355 ;; Tracked objects:
  4356 ;;		On entry : 100/0
  4357 ;;		On exit  : 100/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  4360 ;;      Params:         0       0       0       0
  4361 ;;      Locals:         0       0       0       0
  4362 ;;      Temps:          0       0       0       0
  4363 ;;      Totals:         0       0       0       0
  4364 ;;Total ram usage:        0 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; This function calls:
  4367 ;;		Nothing
  4368 ;; This function is called by:
  4369 ;;		_Timer2_Isr
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           ;psect for function _ChargeTick_Ctrl
  4373                           
  4374                           
  4375                           ;charge.c: 27: if( ChargeDetectTick < 20 )
  4376                           ;incstack = 0
  4377                           ; Regs used in _ChargeTick_Ctrl: [wreg+status,2+status,0]
  4378  02DC  3014               	movlw	20
  4379  02DD  0221               	subwf	_ChargeDetectTick,w
  4380  02DE  1C03               	btfss	3,0
  4381                           
  4382                           ;charge.c: 28: {
  4383                           ;charge.c: 29: ChargeDetectTick++;
  4384  02DF  0AA1               	incf	_ChargeDetectTick,f
  4385  02E0  0008               	return
  4386  02E1                     __end_of_ChargeTick_Ctrl:	
  4387                           
  4388                           	psect	text49
  4389  022A                     __ptext49:	
  4390  022A                     _BatteryTick_Ctrl:	
  4391 ;; *************** function _BatteryTick_Ctrl *****************
  4392 ;; Defined at:
  4393 ;;		line 115 in file "battery.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2, status,0
  4402 ;; Tracked objects:
  4403 ;;		On entry : 100/0
  4404 ;;		On exit  : 100/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l
  4407 ;;      Params:         0       0       0       0
  4408 ;;      Locals:         0       0       0       0
  4409 ;;      Temps:          0       0       0       0
  4410 ;;      Totals:         0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; This function calls:
  4414 ;;		Nothing
  4415 ;; This function is called by:
  4416 ;;		_Timer2_Isr
  4417 ;; This function uses a non-reentrant model
  4418 ;;
  4419                           ;psect for function _BatteryTick_Ctrl
  4420                           
  4421                           
  4422                           ;battery.c: 134: }
  4423                           ;battery.c: 135: }
  4424                           ;battery.c: 136: }
  4425                           ;battery.c: 138: if((BatteryLvdTick < 28) && (BatteryStatus != 3))
  4426                           ;incstack = 0
  4427                           ; Regs used in _BatteryTick_Ctrl: [wreg+status,2+status,0]
  4428  022A  301C               	movlw	28
  4429  022B  022B               	subwf	_BatteryLvdTick,w
  4430  022C  1803               	btfsc	3,0
  4431  022D  2A33               	goto	i1l7196
  4432  022E  3003               	movlw	3
  4433  022F  0630               	xorwf	_BatteryStatus,w
  4434  0230  1903               	btfsc	3,2
  4435  0231  2A33               	goto	i1l7196
  4436                           
  4437                           ;battery.c: 139: {
  4438                           ;battery.c: 140: BatteryLvdTick++;
  4439  0232  0AAB               	incf	_BatteryLvdTick,f
  4440  0233                     i1l7196:	
  4441                           
  4442                           ;battery.c: 141: }
  4443                           ;battery.c: 143: if(BatteryStatusTick < 96)
  4444  0233  3060               	movlw	96
  4445  0234  022F               	subwf	_BatteryStatusTick,w
  4446  0235  1C03               	btfss	3,0
  4447                           
  4448                           ;battery.c: 144: {
  4449                           ;battery.c: 145: BatteryStatusTick++;
  4450  0236  0AAF               	incf	_BatteryStatusTick,f
  4451                           
  4452                           ;battery.c: 146: }
  4453                           ;battery.c: 148: if(BatteryFullJudgTick < 78)
  4454  0237  304E               	movlw	78
  4455  0238  0226               	subwf	_BatteryFullJudgTick,w
  4456  0239  1C03               	btfss	3,0
  4457                           
  4458                           ;battery.c: 149: {
  4459                           ;battery.c: 150: BatteryFullJudgTick++;
  4460  023A  0AA6               	incf	_BatteryFullJudgTick,f
  4461  023B  0008               	return
  4462  023C                     __end_of_BatteryTick_Ctrl:	
  4463  003E                     btemp	set	62	;btemp
  4464  003E                     wtemp0	set	62
  4465                           
  4466                           	psect	pa_nodes0
  4467  0000                     SFR:	
  4468  0000                     Addresses:	
  4469                           ; Version 1.45
  4470                           ; Generated 16/11/2017 GMT
  4471                           ; 
  4472                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
  4473                           ; All rights reserved.
  4474                           ; 
  4475                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
  4476                           ; 
  4477                           ; Redistribution and use in source and binary forms, with or without modification, are
  4478                           ; permitted provided that the following conditions are met:
  4479                           ; 
  4480                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
  4481                           ;        conditions and the following disclaimer.
  4482                           ; 
  4483                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
  4484                           ;        of conditions and the following disclaimer in the documentation and/or other
  4485                           ;        materials provided with the distribution.
  4486                           ; 
  4487                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
  4488                           ;        software without specific prior written permission.
  4489                           ; 
  4490                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  4491                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
  4492                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
  4493                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSequENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
  4494                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
  4495                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
  4496                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
  4497                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  4498                           ; 
  4499                           ; 
  4500                           ; Code-generator required, PIC16F887 Definitions
  4501                           ; 
  4502                           ; SFR Addresses
  4503                           


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            46      8      43
    BANK1h           32      0       0
    BANK1l           46      0      18

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Timer2_Isr in COMMON

    None.

Critical Paths under _main in BANK0

    _Sleep_Manage->_Battery_Init_Data
    _LED_Manage->_LED_Status
    _Key_Detect->_Read_Key
    _Battery_StatusJudg->_SetLVD_Level
    _Battery_LvdDetect->_Get_Lvdf
    _Battery_Init->_Battery_Init_Data
    _Battery_Init_Data->_DelayMs
    _DelayMs->_DelayUs2x

Critical Paths under _Timer2_Isr in BANK0

    None.

Critical Paths under _main in BANK1h

    None.

Critical Paths under _Timer2_Isr in BANK1h

    None.

Critical Paths under _main in BANK1l

    None.

Critical Paths under _Timer2_Isr in BANK1l

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1205
                       _Battery_Init
                     _Battery_Manage
                      _Charge_Config
                      _Charge_Manage
                            _DelayMs
                         _Eve_Manage
                         _LED_Manage
                         _Power_Init
                       _Power_Manage
                           _RGB_Init
                       _Sleep_Manage
                    _Tick_Timer_Init
                             _inital
                           _key_Init
                           _led_Init
                         _ramInitial
                         _sysinitial
 ---------------------------------------------------------------------------------
 (1) _sysinitial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ramInitial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inital                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Tick_Timer_Init                                      0     0      0       0
                     _TickTimer_Open
 ---------------------------------------------------------------------------------
 (1) _Sleep_Manage                                         0     0      0     441
                  _Battery_Init_Data
                            _DelayMs
                         _Sleep_Init
                         _Sleep_Jump
                       _Sleep_Wakeup
 ---------------------------------------------------------------------------------
 (2) _Sleep_Wakeup                                         0     0      0       0
       _ChargeDetect_Interrupt_Close
                _Key_Interrupt_Close
                     _TickTimer_Open
 ---------------------------------------------------------------------------------
 (2) _TickTimer_Open                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Key_Interrupt_Close                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ChargeDetect_Interrupt_Close                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Jump                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Sleep_Init                                           0     0      0       0
        _ChargeDetect_Interrupt_Open
                 _Key_Interrupt_Open
                    _TickTimer_Close
 ---------------------------------------------------------------------------------
 (3) _TickTimer_Close                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Key_Interrupt_Open                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ChargeDetect_Interrupt_Open                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RGB_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_Manage                                         0     0      0       0
                         _Power_Turn
 ---------------------------------------------------------------------------------
 (2) _Power_Turn                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_Manage                                           0     0      0     120
                          _LED_Color
                            _LED_Dim
                        _LED_PWM_Set
                         _LED_Status
 ---------------------------------------------------------------------------------
 (2) _LED_Status                                           2     2      0      96
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _LED_PWM_Set                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Dim                                              0     0      0       0
                  _LED_DimIndex_Ctrl
 ---------------------------------------------------------------------------------
 (3) _LED_DimIndex_Ctrl                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LED_Color                                            1     1      0      24
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Eve_Manage                                           0     0      0     157
                         _Eve_Detect
                         _Key_Detect
 ---------------------------------------------------------------------------------
 (2) _Key_Detect                                           0     0      0     157
                           _Read_Key
 ---------------------------------------------------------------------------------
 (3) _Read_Key                                             6     4      2     157
                                              2 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _Eve_Detect                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Charge_Manage                                        0     0      0       0
                      _Charge_Detect
 ---------------------------------------------------------------------------------
 (2) _Charge_Detect                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Charge_Config                                        0     0      0       0
                        _Charge_Init
 ---------------------------------------------------------------------------------
 (2) _Charge_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Battery_Manage                                       0     0      0      46
                  _Battery_Full_Judg
                  _Battery_LvdDetect
                 _Battery_StatusJudg
 ---------------------------------------------------------------------------------
 (2) _Battery_StatusJudg                                   0     0      0      22
                       _SetLVD_Level
 ---------------------------------------------------------------------------------
 (3) _SetLVD_Level                                         1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Battery_LvdDetect                                    0     0      0      24
                           _Get_Lvdf
 ---------------------------------------------------------------------------------
 (2) _Battery_Full_Judg                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Battery_Init                                         0     0      0     268
                  _Battery_Init_Data
 ---------------------------------------------------------------------------------
 (2) _Battery_Init_Data                                    2     2      0     268
                                              5 BANK0      2     2      0
                            _DelayMs
                           _Get_Lvdf
                           _Lvd_Init
 ---------------------------------------------------------------------------------
 (3) _Lvd_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _Get_Lvdf                                             1     1      0      24
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DelayMs                                              2     0      2     173
                                              3 BANK0      2     0      2
                          _DelayUs2x
 ---------------------------------------------------------------------------------
 (3) _DelayUs2x                                            1     1      0      22
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Timer2_Isr                                           2     2      0       0
                                              0 BANK0      2     2      0
                   _BatteryTick_Ctrl
                    _ChargeTick_Ctrl
                     _SleepTick_Ctlr
 ---------------------------------------------------------------------------------
 (6) _SleepTick_Ctlr                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ChargeTick_Ctrl                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _BatteryTick_Ctrl                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Battery_Init
     _Battery_Init_Data
       _DelayMs
         _DelayUs2x
       _Get_Lvdf
       _Lvd_Init
   _Battery_Manage
     _Battery_Full_Judg
     _Battery_LvdDetect
       _Get_Lvdf
     _Battery_StatusJudg
       _SetLVD_Level
   _Charge_Config
     _Charge_Init
   _Charge_Manage
     _Charge_Detect
   _DelayMs
     _DelayUs2x
   _Eve_Manage
     _Eve_Detect
     _Key_Detect
       _Read_Key
   _LED_Manage
     _LED_Color
     _LED_Dim
       _LED_DimIndex_Ctrl
     _LED_PWM_Set
     _LED_Status
   _Power_Init
   _Power_Manage
     _Power_Turn
   _RGB_Init
   _Sleep_Manage
     _Battery_Init_Data
       _DelayMs
         _DelayUs2x
       _Get_Lvdf
       _Lvd_Init
     _DelayMs
       _DelayUs2x
     _Sleep_Init
       _ChargeDetect_Interrupt_Open
       _Key_Interrupt_Open
       _TickTimer_Close
     _Sleep_Jump
     _Sleep_Wakeup
       _ChargeDetect_Interrupt_Close
       _Key_Interrupt_Close
       _TickTimer_Open
   _Tick_Timer_Init
     _TickTimer_Open
   _inital
   _key_Init
   _led_Init
   _ramInitial
   _sysinitial

 _Timer2_Isr (ROOT)
   _BatteryTick_Ctrl
   _ChargeTick_Ctrl
   _SleepTick_Ctlr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               2E      8      2B       3       93.5%
ABS                  0      0      3D       4        0.0%
BITBANK0            2E      0       2       5        4.3%
BITBANK1h           20      0       0       6        0.0%
BITBANK1l           2E      0       0       7        0.0%
BANK1h              20      0       0       8        0.0%
BANK1l              2E      0      12       9       39.1%
DATA                 0      0      3D      10        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Aug 09 20:41:50 2025

                   __end_of_sysinitial 02E5                                      L1 0259  
                                    L2 0064                                      L3 00A0  
                                    L4 021F                                      L5 01FE  
                                   SFR 0000                                     _T1 004D  
                                   _T2 0052                            ?_LED_Manage 0033  
                         ?_LED_PWM_Set 0033                                    l502 0228  
                                  _GIE 0077                                    _BOR 025B  
                                  _FSR 0004                                    _PS0 0208  
                                  _PS1 0209                                    _PS2 020A  
                          ?_LED_Status 0033                                    _SCS 0285  
                                  _PSA 020B                                    _POR 025C  
                  Timer2_Isr@timer_1ms 001E                 __end_of_TickTimer_Open 02ED  
                      __end_of_LED_Dim 0295                        ?_Battery_Manage 0033  
                                 l7000 00B7                                   l7004 00BA  
                                 l1981 00FD                                   l3389 0087  
                                 l7102 011A                                   l1983 0111  
                                 l1984 0104                                   l7018 01B0  
                                 l7042 0197                                   l7122 014B  
                                 l1987 0115                                   l7028 01B3  
                                 l7060 01A7                                   l7132 0156  
                                 l7124 014E                                   l7038 01C4  
                                 l7128 0152                                   l7136 015B  
                                 l7152 029E                                   l4834 02C5  
                                 l7154 02C1                                   l7084 00FA  
                                 l7148 0210                                   l7164 02CD  
                                 l3877 0149                                   l7174 029A  
                                 l7176 029D                                   l7096 010A  
                                 l7256 0246                                   l7248 023E  
                                 _ADEN 02D0                                   l6810 0221  
                                 l6804 021C                                   l6814 0269  
                                 l6806 021E                                   l6830 0018  
                                 l6816 025E                                   l7378 01ED  
                                 l6818 02E9                                   l6836 0024  
                                 l6844 0033                                   l7396 01D6  
                                 l6918 0174                                   l6950 008B  
                                 l6872 0071                                   l6864 0084  
                                 l6786 02F6                                   l6858 004E  
                                 l6866 0063                                   l6980 00A4  
                                 l6956 0090                                   _ADON 02D1  
                                 l6798 02B9                                   l6976 00A1  
                                 l6986 00AB                                   _CHS0 02D2  
                                 _CHS1 02D3                                   _CHS2 02D4  
                                 _CHS3 02D5                                   _T0CK 025F  
                                 _T0CS 020D                                   _T1IE 0259  
                                 _T1IF 0258                                   _T1EN 0267  
                                 _T2IE 025E                                   _T2IF 025D  
                                 _T2EN 0287                                   _PDA0 0210  
                                 _PDA1 0211                                   _PDA2 0212  
                                 _PDA3 0213                                   _PDA4 0214  
                                 _PDA5 0215                                   _PDA6 0216  
                                 _PDA7 0217                                   _T0SE 020C  
                                 _IOCA 0007                                   _IOCB 0009  
                                 _INDF 0000                                   _PHA0 0218  
                                 _PHA1 0219                                   _PHA2 021A  
                                 _PHA3 021B                                   _PHA4 021C  
                                 _PHA5 021D                                   _PHA6 021E  
                                 _PHA7 021F                                   _PBIE 0071  
                                 _PBIF 0074                                   _LVDF 0047  
                                 _VHS0 02D9                                   _VHS1 02DA  
                                 _VHS2 02DB                                   _PWMM 02A8  
                                 _Cnt1 0023                                   _Cnt2 0022  
                                 _main 01C7                                   btemp 003E  
                   __size_of_LED_Color 001E                                   start 0015  
                      __end_of_DelayMs 026E                __end_of_TickTimer_Close 02F1  
              __end_of_Tick_Timer_Init 02C1                                  _ADCS0 02DC  
                                _ADCS1 02DD                                  _ADCS2 02DE  
                                ?_main 0033                         Get_Lvdf@result 0035  
                                _ADREF 02D8                                  _T1CK0 0263  
                                _T1CK1 0264                                  _T2CK0 0283  
                                _T2CK1 0284                                  _BOREN 025A  
                                _T1CON 004C                                  _T2CON 0050  
                                _IOCB2 004A                                  _IOCB6 004E  
                                _T1PR0 0260                                  _T1PR1 0261  
                                _T1PR2 0262                                  _T2PR0 0280  
                                _T2PR1 0281                                  _T2PR2 0282  
                                _PDCON 000B                                  _PHCON 000D  
                                _LVDCR 0008                                  _PMCON 0040  
                                _PWM0E 0266                                  _PWM1E 0286  
                                _TMR2H 0051                                  _PWM0P 004F  
                                _PWM1P 0054                                  _PORTA 0005  
                                _PORTB 0006                                  _WDTEN 020F  
                                _PWMS0 028E                                  _PWMS1 028F  
                                _TRISA 0045                                  _TRISB 0046  
                          _Charge_Init 02AD                       __end_of_RGB_Init 02DC  
                           _Eve_Detect 00FA                             _Eve_Manage 030A  
                       _LED_W_DimArray 00C7                         _LED_W_DimIndex 001B  
                      ?_TickTimer_Open 0033               __size_of_ChargeTick_Ctrl 0005  
       Battery_Init_Data@BatteryLowCnt 0038                             _Key_Detect 01DD  
                       _LED_Y_DimArray 00C0                    __size_of_LED_Manage 0004  
                       _LED_Y_DimIndex 001A                                  wtemp0 003E  
 __size_of_ChargeDetect_Interrupt_Open 0003                    __size_of_LED_Status 0012  
                     __end_of_Get_Lvdf 02BB                        __initialization 0016  
                  _BatteryFullJudgTick 0026                           __end_of_main 01DD  
                        ?_SetLVD_Level 0033            __size_of_Battery_StatusJudg 0039  
                     __end_of_Read_Key 008B                _BatteryDieCntFinishFlag 0191  
                   __size_of_DelayUs2x 0004                         _SleepTick_Ctlr 017D  
                     __end_of_Lvd_Init 02CD                                 ??_main 0000  
          __size_of_Key_Interrupt_Open 0003                              ??_LED_Dim 0000  
                    __end_of_LED_Color 0163                      ?_BatteryTick_Ctrl 0033  
                               _ADCON0 005A                                 _ADCON1 005B  
                               _ADRESH 0059                                 _ADRESL 0058  
                               _ANSEL0 02B0                                 _ANSEL1 02B1  
                               _ANSEL2 02B2                                 _ANSEL3 02B3  
                               _ANSEL4 02B4                                 _ANSEL5 02B5  
                               _ANSEL6 02B6                                 _ANSEL7 02B7  
                               _ANSEL8 02B8                                 _ANSEL9 02B9  
                               _ANSELH 0057                                 _ANSELL 0056  
                               _T1LOAD 004E                                 _T2LOAD 0053  
                   ??_BatteryTick_Ctrl 0000                  __size_of_Battery_Init 0002  
                   Key_Detect@sys_time 0014                                 _PDCON1 0042  
                               i1l2906 0134                                 i1l7270 018C  
                               i1l7274 0191                                 _INTEDG 020E  
                               i1l7196 0233                                 _PHCON1 0043  
                            ??_DelayMs 0000                                 _PMADRH 0048  
                               _PMADRL 0047                                 _PMDATH 004A  
                               _PMDATL 0049                                 _OPTION 0041  
                               _PWM1_8 0288                                 _PWM1_9 0289  
                               _TRISA0 0228                                 _TRISA1 0229  
                               _TRISB0 0230                                 _TRISA2 022A  
                               _TRISB1 0231                                 _TRISA3 022B  
                               _TRISB2 0232                                 _TRISA4 022C  
                               _TRISB3 0233                                 _TRISA5 022D  
                               _TRISB4 0234                                 _TRISA6 022E  
                               _TRISB5 0235                                 _TRISA7 022F  
                               _TRISB6 0236                                 _TRISB7 0237  
                               _PWMSET 0055                           _ChargeStatus 0193  
                               _EveDim 018B                             _Sleep_Init 02D2  
                           _Sleep_Jump 02A6                             _Timer2_Isr 0123  
                     __end_of_led_Init 00FA                         ??_SetLVD_Level 0000  
                    SetLVD_Level@level 0035                 __end_of_SleepTick_Ctlr 0197  
                     __end_of_key_Init 02E9                       ?_TickTimer_Close 0033  
                               _inital 026E                             _ShortIndex 0020  
                     ?_Tick_Timer_Init 0033                             _Power_Init 0308  
                           _Power_Turn 02C1                   __size_of_LED_PWM_Set 0008  
                         _Battery_Init 030C                            ?_Eve_Detect 0033  
                               saved_w 003E                            ?_Eve_Manage 0033  
                    __end_of_DelayUs2x 02F9  __size_of_ChargeDetect_Interrupt_Close 0003  
 __end_of_ChargeDetect_Interrupt_Close 02FF           _ChargeDetect_Interrupt_Close 02FC  
              __end_of__initialization 0016                            ?_Key_Detect 0033  
                    ??_ChargeTick_Ctrl 0000                              ?_RGB_Init 0033  
                       __pcstackCOMMON 0000                 __size_of_Charge_Detect 0019  
                      ?_SleepTick_Ctlr 0033                 __size_of_Charge_Config 0003  
               __size_of_Charge_Manage 0001                           ??_LED_Manage 0000  
                         ??_LED_Status 0000                       ??_Battery_Manage 0000  
                            ?_Get_Lvdf 0033           __size_of_Key_Interrupt_Close 0003  
                           __pbssBANK0 0010                          ?_Sleep_Manage 0033  
                            ?_Read_Key 0035                              SAVE_BANK1 000C  
                        ?_Sleep_Wakeup 0033                              ?_Lvd_Init 0033  
                   __end_of_LED_Manage 02F5                      _Battery_Init_Data 01B0  
        ?_ChargeDetect_Interrupt_Close 0033                      _KeyShortPressFlag 018F  
                    _Battery_Full_Judg 0163                  Read_Key@interval_1713 0039  
                          ?_Sleep_Init 0033                            ?_Sleep_Jump 0033  
                    _Battery_LvdDetect 01F2                     ?_Battery_Init_Data 0033  
                   __end_of_LED_Status 0218                            ?_Timer2_Isr 0033  
                           __pmaintext 01C7                     ?_Battery_Full_Judg 0033  
                           ??_RGB_Init 0000                  _BatteryCurrCheckLevel 0028  
                  __size_of_Eve_Detect 0029                    __size_of_Eve_Manage 0002  
                   ?_Battery_LvdDetect 0033                             __pintentry 0008  
                              ?_inital 0033                    ??_Battery_Init_Data 0000  
                  ??_Battery_Full_Judg 0000                                _ANSEL10 02BA  
                              _ANSEL11 02BB                                _ANSEL14 02BE  
                              _ANSEL15 02BF                      _LED_DimIndex_Ctrl 024D  
                  ??_Battery_LvdDetect 0000                            ?_Power_Init 0033  
                  __size_of_Key_Detect 0015                                _T0OSCEN 0265  
                          ?_Power_Turn 0033                       ??_TickTimer_Open 0000  
                              _LED_PWM 00D0                           ?_Charge_Init 0033  
                   ?_LED_DimIndex_Ctrl 0033                                _LED_Dim 0289  
                              _RD_FLAG 0200           ?_ChargeDetect_Interrupt_Open 0033  
                           ??_Get_Lvdf 0000                          _Charge_Detect 0197  
                        _Charge_Config 0305                   __end_of_SetLVD_Level 022A  
                            ?_led_Init 0033                          _Charge_Manage 030F  
                  ??_LED_DimIndex_Ctrl 0000                         ??_Sleep_Manage 0000  
                            ?_key_Init 0033              __end_of_Battery_Init_Data 01C7  
                              _DelayMs 025E                             ??_Read_Key 0000  
            __end_of_Battery_Full_Judg 017D                         ??_Sleep_Wakeup 0000  
            __end_of_Battery_LvdDetect 0206                             ??_Lvd_Init 0000  
                              _KeyTick 001F                      _BatteryStatusCnt1 002E  
                    _BatteryStatusCnt2 002D                      _BatteryStatusCnt3 002C  
                    _BatteryStatusTick 002F                             _ramInitial 023C  
            __end_of_LED_DimIndex_Ctrl 025E                        __size_of_inital 000F  
                              __ptext0 0000                                __ptext1 02E1  
                              __ptext2 023C                                __ptext3 00C4  
                              __ptext4 02E5                                __ptext5 026E  
                              __ptext6 02BB                                __ptext7 027D  
                              __ptext8 02CD                                __ptext9 02E9  
                        ?_Power_Manage 0033                              _T1CR_AUXR 004B  
                       ?_Charge_Detect 0033                    __size_of_Sleep_Init 0005  
                  __size_of_Sleep_Jump 0007                         ?_Charge_Config 0033  
                       ?_Charge_Manage 0033                    __size_of_Timer2_Isr 0022  
                            _OCCUPY0BE 00BE                              _OCCUPY0BF 00BF  
                           ??_led_Init 0000                              _LED_Color 0145  
        ??_ChargeDetect_Interrupt_Open 0000                   end_of_initialization 0016  
                           ??_key_Init 0000                            _PowerStatus 0194  
                  __size_of_Power_Init 0002                          _BatteryStatus 0030  
                  __size_of_Power_Turn 0006              __size_of_BatteryTick_Ctrl 0012  
           __end_of_Battery_StatusJudg 00C4             __end_of_Key_Interrupt_Open 0302  
                       ??_Power_Manage 0000                           ??_Eve_Detect 0000  
                         ??_Eve_Manage 0000                 _KeyShortPressTwiceFlag 018D  
                      _ChargeTick_Ctrl 02DC                             ?_LED_Color 0033  
                         _KeyPressTime 0018                          LED_Status@pwm 0035  
           __size_of_Battery_Init_Data 0017                           ??_Key_Detect 0000  
           __size_of_Battery_Full_Judg 001A             __size_of_Battery_LvdDetect 0014  
                         _LED_ColorPwm 0012                       ??_SleepTick_Ctlr 0000  
                            _DelayUs2x 02F5                     __end_of_Eve_Detect 0123  
                          ?_ramInitial 0033                     __end_of_Eve_Manage 030C  
                  _Key_Interrupt_Close 02F9             __size_of_LED_DimIndex_Ctrl 0011  
                    __size_of_RGB_Init 0005                          ??_LED_PWM_Set 0000  
                 __end_of_Sleep_Manage 0289                         __end_of_inital 027D  
                        __pbitbssBANK0 0188                   __end_of_Sleep_Wakeup 02D2  
                __size_of_SetLVD_Level 0012                     __end_of_Key_Detect 01F2  
                      ??_Charge_Detect 0000                        ??_Charge_Config 0000  
                      ??_Charge_Manage 0000                    start_initialization 0016  
                           _sysinitial 02E1               __size_of_TickTimer_Close 0004  
                 __size_of_Charge_Init 0007               __size_of_Tick_Timer_Init 0006  
                 ?_Key_Interrupt_Close 0033                      __size_of_Get_Lvdf 0007  
                        EXIT_BANK_SAVE 000F                       _BatteryDieCntSec 0027  
                           ?_DelayUs2x 0033                      __size_of_Read_Key 0073  
                         ??_Sleep_Init 0000                           ??_Sleep_Jump 0000  
                         ??_Timer2_Isr 0033                      __size_of_Lvd_Init 0006  
                         _SetLVD_Level 0218                               ??_inital 0000  
              __end_of_ChargeTick_Ctrl 02E1                           ??_Power_Init 0000  
                         ??_Power_Turn 0000                            __pbssBANK1l 00C0  
                             ?_LED_Dim 0033                              ___latbits 0000  
                        __pcstackBANK0 0033                    __end_of_LED_PWM_Set 02A6  
                ??_Key_Interrupt_Close 0000                     __end_of_Sleep_Init 02D7  
                   __end_of_Sleep_Jump 02AD                            ??_LED_Color 0000  
                   __end_of_Timer2_Isr 0145                    __size_of_ramInitial 0011  
                             ?_DelayMs 0036                      __size_of_led_Init 0036  
                 __end_of_Power_Manage 030F                      __size_of_key_Init 0004  
                     _BatteryLvdStatus 0192                     __end_of_Power_Init 030A  
                   __end_of_Power_Turn 02C7                       _BatteryTick_Ctrl 022A  
                             REV_BANK1 013E                            ?_sysinitial 0033  
                             Addresses 0000                               _T2LOAD_8 028A  
                             _T2LOAD_9 028B                      ??_TickTimer_Close 0000  
              __size_of_Battery_Manage 0009                      interrupt_function 0008  
                    ??_Tick_Timer_Init 0000                               DelayMs@t 0036  
                       LED_Color@index 0035                       _KeyLongPressFlag 018E  
                          ??_DelayUs2x 0000                               _RGB_Init 02D7  
                __size_of_Sleep_Manage 000C                               _TIMER2_8 028C  
                             _TIMER2_9 028D                               _MTP_CLEN 0201  
                __size_of_Sleep_Wakeup 0005                            _LED_PWM_Set 029E  
                     ?_ChargeTick_Ctrl 0033                          ?_Battery_Init 0033  
                   _Battery_StatusJudg 008B                       __size_of_LED_Dim 000C  
                             _LedColor 001C                               _Get_Lvdf 02B4  
                   _Key_Interrupt_Open 02FF                               _EveColor 018A  
                             _EvePower 018C                    ?_Battery_StatusJudg 0033  
              __size_of_TickTimer_Open 0004                           _Sleep_Manage 027D  
                             _Read_Key 0018                       __size_of_DelayMs 0010  
                  ?_Key_Interrupt_Open 0033                               _Lvd_Init 02C7  
                         _Sleep_Wakeup 02CD                       Read_Key@interval 0037  
                             _SleepSig 0188                    __size_of_sysinitial 0004  
                         ??_ramInitial 0000                   ??_Battery_StatusJudg 0000  
                      _BatteryFullCnt1 0025                        _BatteryFullCnt2 0024  
                      _BatteryFullFlag 0190                   ??_Key_Interrupt_Open 0000  
                     Read_Key@sys_time 0035                         ??_Battery_Init 0000  
  __end_of_ChargeDetect_Interrupt_Open 0305            _ChargeDetect_Interrupt_Open 0302  
                             __ptext10 02F9                               __ptext11 02FC  
                             __ptext20 0308                               __ptext12 02A6  
                             __ptext21 02F1                               __ptext13 02D2  
                             __ptext30 00FA                               __ptext22 0206  
                             __ptext14 02ED                               __ptext31 030F  
                             __ptext23 029E                               __ptext15 02FF  
                             __ptext40 030C                               __ptext32 0197  
                             __ptext24 0289                               __ptext16 0302  
                             __ptext41 01B0                               __ptext33 0305  
                             __ptext25 024D                               __ptext17 02D7  
                             __ptext42 02C7                               __ptext34 02AD  
                             __ptext26 0145                               __ptext18 030E  
                             __ptext43 02B4                               __ptext35 0295  
                             __ptext27 030A                               __ptext19 02C1  
                             __ptext44 025E                               __ptext36 008B  
                             __ptext28 01DD                               __ptext45 02F5  
                             __ptext37 0218                               __ptext29 0018  
                             __ptext46 0123                               __ptext38 01F2  
                             __ptext47 017D                               __ptext39 0163  
                             __ptext48 02DC                               __ptext49 022A  
                             _led_Init 00C4                  __size_of_Power_Manage 0001  
                   __end_of_ramInitial 024D                               _key_Init 02E5  
                        __size_of_main 0016                             _LED_DimPwm 0010  
       ??_ChargeDetect_Interrupt_Close 0000                             _LED_Manage 02F1  
                         _Power_Manage 030E                             _LED_Status 0206  
                        ??_Charge_Init 0000                             DelayUs2x@t 0035  
                     _ChargeDetectTick 0021                  __end_of_Charge_Detect 01B0  
             __end_of_BatteryTick_Ctrl 023C                  __end_of_Charge_Config 0308  
                   _LastShortPressTime 0016                  __end_of_Charge_Manage 0310  
                       _BatteryLvdCnt1 002A                         _BatteryLvdCnt2 0029  
                             intlevel1 0000                         _BatteryLvdTick 002B  
                       _Battery_Manage 0295                     Battery_Init_Data@i 0039  
              __size_of_SleepTick_Ctlr 001A            __end_of_Key_Interrupt_Close 02FC  
                      _TickTimer_Close 02ED                           ??_sysinitial 0000  
                      _ShortPressCount 001D                        _Tick_Timer_Init 02BB  
               __end_of_Battery_Manage 029E                    __end_of_Charge_Init 02B4  
                       _TickTimer_Open 02E9                        _LastLongKeyFlag 0189  
           _PowerOffPrepareToSleepTick 00CE                   __end_of_Battery_Init 030E  
